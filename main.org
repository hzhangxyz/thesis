#+LATEX_CLASS: thesis
#+OPTIONS: title:nil
#+OPTIONS: toc:nil

#+begin_src emacs-lisp :exports none :results none
  (add-to-list 'org-latex-classes
               '("thesis"
                 "\\documentclass{ustcthesis}\\input{ustcsetup.tex}
                  [NO-DEFAULT-PACKAGES]
                  [NO-PACKAGES]"
                 ("\\chapter{%s}" . "\\chapter*{%s}")
                 ("\\section{%s}" . "\\section*{%s}")
                 ("\\subsection{%s}" . "\\subsection*{%s}")
                 ("\\subsubsection{%s}" . "\\subsubsection*{%s}")
                 ("\\paragraph{%s}" . "\\paragraph*{%s}")
                 ("\\subparagraph{%s}" . "\\subparagraph*{%s}")))
  (setq org-latex-pdf-process
        '("xelatex -interaction nonstopmode -output-directory %o %f"
          "bibtex %b"
          "xelatex -interaction nonstopmode -output-directory %o %f"
          "xelatex -interaction nonstopmode -output-directory %o %f"))
  (setq org-format-latex-options (plist-put org-format-latex-options :scale 4.0))
#+end_src

#+begin_export latex
\maketitle
\copyrightpage
\frontmatter
#+end_export

#+begin_export latex
\ustcsetup{
  keywords  = {张量网络态，强关联系统，量子多体问题，投影纠缠对态},
  keywords* = {Tensor network state, Strongly correlated systems, Quantum many-body problems, PEPS},
}
#+end_export

#+begin_export latex
\begin{abstract}
摘要 TODO
\end{abstract}

\begin{abstract*}
abstract TODO
\end{abstract*}
#+end_export

#+begin_export latex
\tableofcontents
\listoffigures
\listoftables
#+end_export

* 主要符号对照表

#+begin_export latex
\newenvironment{ustcnotation}{\begin{notation}\begin{notationlist}{2em}}{\end{notationlist}\end{notation}}
#+end_export

#+attr_latex: :environment ustcnotation
- ED :: 严格对角化 (Exact Diagonalization)
- QMC :: 量子蒙特卡洛方法 (Quantum Monte Carlo)
- Ansatz :: 拟设 (Ansatz)
- TNS :: 张量网络态 (Tensor Network States)
- MPS :: 矩阵乘积态 (Matrix Product States)
- PEPS :: 投影纠缠对态 (Projected Entangled Pair States)
- iTEBD :: 逐块虚时间演化 (Imaginary Time-evolving Block Decimation)
- SU :: 简单更新 (Simple Update)
- DMRG :: 密度矩阵重整化 (Density Matrix Renormalization Group)

TODO 符号对照表

#+begin_export latex
\mainmatter
#+end_export

* 绪论 <<sec:绪论>>

上世纪发展的郎道费米液体理论和基于自发对称性破缺的相变理论在强关联系统中失效。
在这种系统中，粒子之间的相互作用非常强，使得传统微扰方法难以给出准确结果。
因此，对这类系统的性质分析主要依赖于数值方法。
故发展针对强关联系统的数值方法成了近年来备受关注的研究方向之一。

强关联系统的数值求解受制于巨大的希尔伯特空间维度，其随着系统尺寸增大而呈指数增长。
因此，传统严格对角化(ED)方法仅适用于约30个格点的有限系统求解。
在某些特殊的强关联系统中，量子蒙特卡洛方法(QMC)能够给出优异结果，但有阻错的系统存在符号问题，为了收敛它依然必须指数增加采样量。
另一大类方法则使用拟设(ansatz)函数来表示波函数，如何用有限数据量表示庞大的希尔伯特空间中的向量是这类数值方法的出发点。

近年来，除了一些传统的有偏拟设和神经网络态拟设，张量网络态(TNS)拟设备受到极大关注。
2003年，Vidal提出了矩阵乘积态作为最早的张量网络态 [[cite:Vidal2003]] 。
这种方法使用一维张量链来表示一维系统的波函数，特别适合满足纠缠熵面积定律的系统。
Verstaete随后将其推广至二维系统，即投影纠缠对态(PEPS) [[cite:Verstraete2004]] ，同样适用于满足面积定律的二维系统。
Vidal针对矩阵乘积态提出了逐块虚时间演化算法(iTEBD) [[cite:Vidal2004,Vidal2007]] ，能有效获得一维系统的基态。
然而在处理二维系统时，优化投影纠缠态变得十分困难，逐块虚时间演化算法难以获得精确结果。
2008年，向涛通过在二维系统逐块虚时间演化算法中引入简单环境得到简单更新(SU)方法 [[cite:Jiang2008]] ，实现在计算效率不减的情况下近似获得基态结果。
获得系统基态后，为计算相关物理量观测值，需要对二维双层张量网络进行收缩。
Sandvik于2007年提出了采样方法 [[cite:Sandvik2007]] ，通过仅收缩二维单层张量网络，便能计算观测量。
2017年，采样方法被用于计算能量梯度 [[cite:Liu2017]] ，从而可用采样方法直接优化拟设波函数。
近几年，直接采样方法 [[cite:Vieijra2021]] 和自然梯度法 [[cite:Neuscamman2012]] 被引入，极大提升了采样效率和优化效率。

本论文将介绍近些年我们对基于采样的张量网络方法的发展与应用。主要结构安排如下：
+ 第 [[ref:sec:绪论]] 章绪论，即本章。
+ 第 [[ref:sec:张量和张量网络]] 章详细介绍张量和张量网络的基础理论。
+ 第 [[ref:sec:张量网络态算法]] 章介绍多种基于张量网络态的算法。
+ 第 [[ref:sec:神威优化]] 章介绍在国产神威系统上对张量网络态的程序优化工作。
+ 第 [[ref:sec:软件]] 章介绍张量网络态计算套件的设计和开发。
+ 第 [[ref:sec:超导]] 章介绍在六角晶格中的Hubbard模型中寻找超导相的工作。
+ 第 [[ref:sec:有限温]] 章介绍方形晶格中的Hubbard模型的有限温模型工作。

本论文将一直使用爱因斯坦求和约定。本论文将一直从 $0$ 开始计数而不是 $1$ 开始计数。

* 张量和张量网络 <<sec:张量和张量网络>>

** 矩阵乘积态 (MPS)

*** MPS的表示

数值模拟量子多体问题的根本困难在于系统的希尔伯特空间的维度随着系统尺寸的增大指数上升。
比如对于自旋系统，由 $N$ 个自旋 $\frac{1}{2}$ 的粒子构成的格点有 $2^N$ 维的希尔伯特空间，为了表示这个系统的状态，需要 $2^N$ 维的向量作为波函数。
所以不做任何近似的严格表示这个波函数，并精确求解系统的本征态，只能处理很小的系统。
而White在1992年提出了密度矩阵重整化(DMRG)方法 [[cite:White1992]] 成功地求解了各种一维模型的低能态性质。
后来Vidal提出矩阵乘积态(MPS) [[cite:Vidal2003]] ，人们认识到DMRG方法可以被认为是对MPS表示的波函数进行优化的过程。

首先介绍一下张量，它可以被简单地认为是多个线性空间上的多线性映射：
\begin{equation}
\hat T : V_0 \otimes V_1 \otimes V_2 \cdots V_{\mathrm{rank}(T)-1} \to \mathbb{K} .
\end{equation}
其中 $V_r$ 是 $\mathbb{K}$ 上的线性空间， $r=0,1,2,\cdots \mathrm{rank}(T)-1$ 。
而本论文中， $\mathbb{K}$ 只会取 $\mathbb{R}$ 或者 $\mathbb{C}$ ， $V_r$ 也一定是定义了内积的有限维线性空间，
所以可以使用一个高维数组来表示一个张量，即
\begin{equation}
\hat T (
\sum_{i_0=0}^{D_0-1} a_0^{i_0} e_0^{i_0},
\sum_{i_1=0}^{D_1-1} a_1^{i_1} e_1^{i_1},
\cdots
\def\rrr{{R-1}}
\sum_{i_\rrr=0}^{D_{R-1}-1} a_\rrr^{i_\rrr} e_\rrr^{i_\rrr}
)
=
T^{i_0,i_1,\cdots,i_\rrr} a_0^{i_0} a_1^{i_1} \cdots a_\rrr^{i_\rrr},
\end{equation}
其中 $D_r = \mathrm{dim}(V_r)$ ， 而 $R=\mathrm{rank}(T)$ 。
为了表达上的简便，我们直接称呼 $T$ 为张量。

MPS使用一个张量链来表示高维的向量。
以自旋 $\frac{1}{2}$ 系统为例子，一个长度为 $L$ 的自旋系统波函数
\begin{equation}\label{eq:一维系统波函数}
|\Psi\rangle = T^{\sigma_0,\sigma_1,\cdots,\sigma_{L-1}} |\sigma_0 \sigma_1 \cdots \sigma_{L-1}\rangle ,
\end{equation}
可以被使用MPS来表示：
\begin{equation}\label{eq:一维系统波函数的MPS展开}
T^{\sigma_0,\sigma_1,\cdots,\sigma_{L-1}} =
(A_0 ^ {\sigma_0})_{v_1}
(A_1 ^ {\sigma_1})_{v_1 v_2}
(A_2 ^ {\sigma_2})_{v_2 v_3}
\cdots (A_{L-1} ^ {\sigma_{N-1}})_{v_{N-1}} ,
\end{equation}
其中 $\sigma_i$ 为第 $i$ 个格点处的自旋，可以取 $\uparrow$ 或者 $\downarrow$。
从公式 [[eqref:eq:一维系统波函数的MPS展开]] 中看到，MPS表示的波函数在一个构型下的分量，是一连串的矩阵乘积，这是矩阵乘积态(MPS)名称由来。

在MPS表示中，除了最左边和最右边的格点外，第 $i$ 个格点处的 $(A_i^{\sigma_i})_{v_i v_{i+1}}$ 是一个三阶张量，它有一个物理指标 $\sigma_i$
和两个虚拟指标 $v_i$ 和 $v_{i+1}$ 。
其中物理指标 $\sigma_i$ 可以取 $\uparrow$ 或者 $\downarrow$，其维度是 $2$ ，通常使用 $d$ 标记。
而虚拟指标的维度是一个可调节的参数，通常用 $D$ 表示。
这些指标被称作虚拟指标是因为他们并不是真正的物理指标。
对于其他类型的系统，一个格点处的物理维度并不一定是 $2$ ，如tJ模型 $d=3$ ， Hubbard模型 $d=4$ 。

*** 面积定律与MPS

在 $D$ 不变的情况下，MPS可以使用随着系统尺寸线性上升的参数来表示维度指数上升的波函数。
而固定 $D$ 的MPS正合适表示满足纠缠熵面积定律的态。

一个量子态分割成两个部分A和B后，A部分和B部分之间的纠缠熵是
\begin{equation}\label{eq:纠缠熵}
S_{A|B} = - \mathrm{tr} (\hat\rho_A \ln \hat\rho_A) = - \mathrm{tr} (\hat\rho_B \ln \hat\rho_B) = - \sum_{v=0}^{V-1} \lambda_v \ln \lambda_v,
\end{equation}
其中 $\hat\rho_A$ 和 $\hat\rho_B$ 是A部分和B部分的约化密度矩阵，$\lambda_v$ 是他们的本征值， $V$ 为约化密度矩阵的维度。
纠缠熵最大的情况下，所有的本征值相等，即 $\lambda_v = \frac{1}{V}$，此时 $S_{A|B} = \ln V$ 。
而约化密度矩阵的维度随着较小系统的尺寸指数上升，不妨假设A部分比B部分更小， 有$S_{A|B} \propto |A|$ ，其中 $|A|$ 为A部分的体积。
而当系统满足纠缠熵面积定律时，纠缠熵有更强的约束， 即
\begin{equation}\label{eq:面积定律}
S_{A|B} \propto |\partial A| = |\partial B|,
\end{equation}
其中 $|\partial X|$ 表示X的边界大小。

对于公式 [[eqref:eq:一维系统波函数的MPS展开]] 表示的MPS， 切割为长度为 $X$ 和 $Y$ 的两部分， $X+Y=L$ ，X部分的约化密度矩阵为
\begin{equation}\label{eq:MPS切割后的约化密度矩阵}
\begin{aligned}
(\hat\rho_X)_{\sigma_0,\sigma_1,\cdots,\sigma_{X-1}}^{\sigma'_0,\sigma_2,\cdots,\sigma'_{X-1}} =&
(A_0 ^ {\sigma_0})_{v_1}
\cdots
(A_{X-1} ^ {\sigma_{X-1}})_{v_{X-1} v_X}
(A_X ^ {\sigma_X})_{v_X v_{X+1}}
\cdots
(A_{L-1} ^ {\sigma_{N-1}})_{v_{N-1}}
\\
&
(A_0 ^ {\sigma'_0})^\dag_{v'_1}
\cdots
(A_{X-1} ^ {\sigma'_{X-1}})^\dag_{v'_{X-1} v'_X}
(A_X ^ {\sigma_X})^\dag_{v'_X v'_{X+1}}
\cdots
(A_{L-1} ^ {\sigma_{N-1}})^\dag_{v'_{N-1}} .
\end{aligned}
\end{equation}
注意到
\begin{equation}
\begin{aligned}
(\hat\rho_X)_{\sigma_0,\sigma_1,\cdots,\sigma_{X-1}}^{\sigma'_0,\sigma_2,\cdots,\sigma'_{X-1}} =&
(A_0 ^ {\sigma_0})_{v_1}
\cdots
(A_{X-1} ^ {\sigma_{X-1}})_{v_{X-1} v_X}
\\
&
M_{v_X, v_X'}
\\
&
(A_0 ^ {\sigma'_0})^\dag_{v'_1}
\cdots
(A_{X-1} ^ {\sigma'_{X-1}})^\dag_{v'_{X-1} v'_X},
\end{aligned}
\end{equation}
其中
\begin{equation}
\begin{aligned}
M_{v_X, v_X'} =&
(A_X ^ {\sigma_X})_{v_X v_{X+1}}
\cdots
(A_{L-1} ^ {\sigma_{N-1}})_{v_{N-1}}
\\
&
(A_X ^ {\sigma_X})^\dag_{v'_X v'_{X+1}}
\cdots
(A_{L-1} ^ {\sigma_{N-1}})^\dag_{v'_{N-1}} ,
\end{aligned}
\end{equation}
而 $M_{v_X,v'_X}$ 是一个 $D \times D$ 的矩阵，所以密度矩阵 $\hat \rho_X$ 的秩不大于 $D$ ，则其可表示的最大纠缠熵为 $S = \ln D$ ，即一个常数。
而满足纠缠熵面积定律的一维系统，两部分的边界是零维的点，大小也是常数，所以MPS表示的一维系统恰好是满足一维情况下面积定律的系统。

由于MPS对面积定律恰到好处的展示，MPS可以较高效地表示满足纠缠熵面积定律的系统的波函数。
一维情况下，局部哈密顿量构成的有能隙系统的基态是满足面积定律的，所以一个固定 $D$ 的MPS可以很好地表示其基态。
而对于无能隙的系统，有 $S \propto \alpha \ln L$ ，即纠缠熵随着系统的尺寸对数上升，而 $ S \propto \ln D$ ，所以应取 $D \propto L ^\alpha$ ，
对于 $\alpha$ 较小的情况， 所需的 $D$ 随着系统尺寸增长缓慢，我们依然可以通过计算相当大的系统来了解接近热力学极限时系统的性质。

*** 张量网络的图形标记

由于张量网络态中各个张量通常有复杂的运算关系，使用爱因斯坦求和约定不能直观地展示张量之间的关系，人们通常使用图形标记法来表示一张张量网络。
图形标记法中，使用一个闭合的图形表示一个张量，图形上的每一条线表示张量的一个指标，两个张量之间彼此相连的线表示这两个指标将要求和。
图 [[ref:fig:张量的图形标记法]] 中展示了一些基本的例子。

#+begin_export latex
\begin{figure}
\centering
\input{tikz/graphical_notation.tikz}
\caption{张量的图形标记法}
\label{fig:张量的图形标记法}
\note{注：
(a)是一个标量 $A$ ，即0阶张量；
(b)是一个向量 $A_i$ ，即1阶张量，有一个指标 $i$ ；
(c)是一个矩阵 $A_{ij}$ ，即2阶张量，有两个指标 $i$ 和 $j$ ；
(d)表示矩阵 $A_{ij}$ 和向量 $B_j$ 的乘积，即 $A_{ij} B_{j}$ ；
(e)表示两个矩阵相乘，即 $A_{ij} B_{jk}$ ；
(f)中三个矩阵彼此相连，表示了 $A_{ij} B_{jk} C_{ji}$ 。
}
\end{figure}
#+end_export

使用图形标记法表示的公式 [[eqref:eq:一维系统波函数的MPS展开]] 所展示的MPS在 $L=5$ 时如图 [[ref:fig:图形标记法表示的长度为5的MPS]] 所示。
张量网络的图形标记法直观地展示了张量之间的连接关系。

#+begin_export latex
\begin{figure}
\centering
\input{tikz/mps.tikz}
\caption{图形标记法表示的长度为$5$的MPS}
\label{fig:图形标记法表示的长度为5的MPS}
\end{figure}
#+end_export

** 投影纠缠对态 (PEPS)

*** PEPS的表示

MPS成功地处理一维系统后，有一些将MPS直接应用于二维系统的尝试，如图 [[ref:fig:用于表示二维系统的MPS和PEPS]] (a)所示。
但是二维系统中，对于满足纠缠熵面积定律的系统，纠缠熵 $S \propto L$ ，其中 $L$ 为边界的长度。
这意味这MPS的 $D$ 需要随着系统增大而增大。
时至今日，这种方法通常被用于长条形的系统的求解，而对于真正的二维系统，MPS无法胜任。
Verstraete在表示二维系统的MPS上额外上了行间的边从而得到了PEPS [[cite:Verstraete2004]] ，如图 [[ref:fig:用于表示二维系统的MPS和PEPS]] (b)所示。
我们称呼物理指标所在的边为物理边，其他张量之间彼此相连的边为虚拟边。

#+begin_export latex
\begin{figure}
\centering
\input{tikz/mps_to_peps.tikz}
\caption{用于表示二维系统的MPS和PEPS}
\label{fig:用于表示二维系统的MPS和PEPS}
\note{注：由于固定 $D$ 的MPS只能表示常数的纠缠熵，通过在行间加上而外的边可以得到PEPS，PEPS可以满足二维系统的面积定律。}
\end{figure}
#+end_export

一张PEPS中划分出一个区域X，其与外界相连的边的数目正比与区域的周长，即边的数目 $N \propto |\partial X|$ 。
类似MPS的情况，计算约化密度矩阵时有同样的形式：
\begin{equation}\label{eq:PEPS中计算约化密度矩阵}
(\hat\rho_{X})_{s_{X, 0}, s_{X, 1}, \cdots} ^ {s'_{X, 0}, s'_{X, 1}, \cdots} =
T_{s_{X,0}, s_{X,1}, \cdots}^{v_0, v_1, \cdots v_{N-1}}
M_{v_0, v_1, \cdots v_{N-1}}^{v'_0, v'_1, \cdots v'_{N-1}}
T^{\dag {s'_{X,0}, s'_{X,1}, \cdots}}_{v'_0, v'_1, \cdots v'_{N-1}} , 
\end{equation}
其中， $s_{X,i}$ 为区域X中各个物理指标， $v_i$ 为区域X和外部相连的边的指标。
公式 [[eqref:eq:PEPS中计算约化密度矩阵]] 中间有一个 $D^N$ 维度的矩阵$M$，其中 $D$ 是PEPS中虚拟边的维度。
而 $S = \ln D^N = N \ln D \propto |\partial X|$ ，所以PEPS可以满足二维系统的纠缠熵面积定律。

*** 投影纠缠对

使用一张张量网络表示波函数时，我们可以有两种阐述方式。第一种是数学上的分解，即对于任意一个 $R$ 个粒子的系统，波函数
\begin{equation}
|\Psi\rangle = T_{i_{T,0}, i_{T,1}, \cdots, i_{T,R-1}} |i_0 i_1 \cdots i_{R-1} \rangle ,
\end{equation}
中 $T$ 作为一个 $R$ 阶张量，可以被分解为一张张量网络：
\begin{equation}
\begin{aligned}
T_{i_{T,0}, i_{T,1}, \cdots, i_{T, R-1}} = &
\prod_{n=0}^{N-1} (A_n)_{i_{A_n, 0} i_{A_n, 1} \cdots i_{A_n, \mathrm{rank}(A_n) -1}}
\\ &
\prod_{b=0}^{B-1} \delta^{i_{A_{V_b^0},E_b^0}}_{i_{A_{V_b^1},E_b^1}}
\\ &
\prod_{r=0}^{R-1} \delta^{i_{T,r}}_{i_{A_{V'_r},E'_r}} .
\end{aligned}
\end{equation}
这张张量网络中有 $N$ 个张量，即 $A_n$ ，其中 $n = 0, 1, \cdots N-1$ 。
张量 $A_n$ 的阶数是 $\mathrm{rank}(A_n)$ ，它的指标被记作 $i_{A_n, j}$ ，其中 $j = 0, 1, \cdots \mathrm{rank}(A_n) - 1$ 。
这张张量网络内部有 $B$ 个边连接两个张量，第 $b$ 个边所连接的是第 $V_b^0$ 个张量的第 $E_b^0$ 个边和第 $V_b^1$ 个张量的第 $E_b^1$ 个边，其中 $b=0,1,\cdots B-1$
而这些张量中，有 $R$ 个边没有被收缩，而是作为物理边出现在张量 $T$ 中，
张量 $T$ 的第 $r$ 个边在张量网络中是第 $V'_r$ 个张量的第 $E'_r$ 个边，其中 $r = 0, 1, \cdots R-1$ 。
这张张量网络中，由 $A_n$ ， $n=0, \cdots N-1$ 组成，由 $V_b^0, V_b^1, V'_r, E_b^0, E_b^1, E'_r$ ， $b=0,\cdots B-1, r=0,\cdots R-1$ 表示张量的图结构。
通过不同的张量网络图结构，可以构造出不同类型的张量网络。

另一种阐述方式是将张量网络态视为对一群纠缠对所构成的母态的投影。
先把波函数写成产生算符的形式：
\begin{equation}\label{eq:一般的波函数}
|\Psi\rangle = T_{i_{T,0}, i_{T,1}, \cdots, i_{T,R-1}} \prod_{r=0}^{R-1} c_r^{\dag i_{T,r}} |\Omega\rangle ,
\end{equation}
其中 $|\Omega\rangle$ 是真空态，  $c_r^{\dag i_{T,r}}$ 是第 $r$ 个粒子处，产生第 $i_{T,r}$ 个构型的算符。
需要注意的是，对于一些系统， $c_r^{\dag i_{T,r}}$ 不一定是单个粒子的产生算符，而可能是多个粒子产生算符的复合。
然后将波函数视为对一个母态的投影：
\begin{equation}
|\Psi\rangle = P M |\Omega\rangle ,
\end{equation}
其中 $P$ 为投影算符， $M$ 为制备母态的算符。
而母态为众多组纠缠对的组合：
\begin{equation}
M = 
\prod_{b=0}^{B-1} a_{b,0}^{\dag d_b} a_{b,1}^{\dag d_b}
,
\end{equation}
其中第 $b$ 组纠缠对由 $a_{b,0}^{\dag d_b}$ 和 $a_{b,1}^{\dag d_b}$ 生成， 这里 $d_b$ 取值范围为 $0, 1, \cdots D_b - 1$ ，其中 $D_b$ 为这组纠缠对的个数。
而投影算符被定义为：
\begin{equation}
\begin{aligned}
P = 
\prod_{n=0}^{N-1} & (A_n)_{i_{A_n, 0} i_{A_n, 1} \cdots i_{A_n, \mathrm{rank}(A_n) -1}} \\
&
\prod_{j=0}^{\mathrm{rank}(A_n) - 1} \left\{
\begin{aligned}
&a^{i_{A_n, j}}_{X_{A_n,j},Y_{A_n, j}} \ & \text{如果 $A_n$ 的第 $j$ 个边为虚拟边}, \\
&c^{\dag i_{A_n,j}}_{Z_{A_n,j}} \ & \text{如果 $A_n$ 的第 $j$ 个边为物理边},
\end{aligned}
\right.
\end{aligned}
\end{equation}
其中 $A_n$ 的第 $j$ 个边，如果是物理边，则是 $|\Psi\rangle$ 的第 $Z_{A_n,j}$ 个边，
如果是虚拟边，则将湮灭掉第 $X_{A_n,j}$ 组纠缠对中粒子，而 $Y_{A_n,j}$ 取 $0$ 或 $1$ ，标记其湮灭的是纠缠对中靠前的还是靠后的粒子。
这种解释方式中，将张量网络的虚拟边用纠缠对表示，投影算子中湮灭同一个纠缠对的两个部分是彼此相连的张量。
每个张量通过湮灭掉纠缠对并产生物理的粒子，实现了将多组纠缠对投影到物理空间的操作，这便是投影纠缠对态的名称由来。
值得注意的是，虽然对纠缠对的投影可以阐述任意图结构的张量网络，但是我们提到“投影纠缠对态”时，都是特指方格形的张量网络的。

在张量网络态的投影纠缠对阐述中，投影部分既有湮灭算符也有产生算符，这不够好看。
我们可以再引入一个虚拟的粒子，得到：
\begin{equation}\label{eq:投影纠缠对阐述的一般张量网络}
\left\{
\begin{aligned}
P &= 
\prod_{n=0}^{N-1} (A_n)_{i_{A_n, 0} i_{A_n, 1} \cdots i_{A_n, \mathrm{rank}(A_n) -1}}
\prod_{j=0}^{\mathrm{rank}(A_n) - 1} 
a^{i_{A_n, j}}_{X_{A_n,j},Y_{A_n, j}} , \\
M &=
\prod_{b=0}^{B-1} a_{b,0}^{\dag d_b} a_{b,1}^{\dag d_b}
\prod_{r=0}^{R-1} a_{r+B,0}^{\dag d_{r+B}} c_r^{\dag d_{r+B}} ,
\end{aligned}
\right.
\end{equation}
这样我们依然可以将公式 [[eqref:eq:一般的波函数]] 表示为母态上的投影，即 $|\Psi\rangle = P M |\Omega\rangle$ 。
这种变型的投影纠缠对阐述将每个张量中各个边平等地对待，图结构的信息完全放置在母态生成算符 $M$ 中。

** 对称性张量和费米子张量 <<sec::对称性张量和费米子张量>>

*** 对称性张量 <<sec:::对称性张量>>

当一个系统的哈密顿量拥有某个对称性时，其基态要么满足这个对称性，要么自发破缺从而是简并的。
对称性变换使用一个紧致群 $G$ 来描述，
如果公式 [[eqref:eq:一般的波函数]] 表示的基态波函数满足这个对称性，我们有
\begin{equation}\label{eq:对称性张量}
U_g^{\otimes R} T_{i_{T,0},\cdots, i_{T,R-1}} = T_{i_{T,0},\cdots, i_{T,R-1}} ,
\end{equation}
其中 $g \in G$ ，
$U_g^{\otimes R} = \bigotimes_{r=0}^{R-1} U_g^r$ ， $U_g^r$ 为 $g$ 在张量的第 $r$ 个指标的线性空间上的表示。
满足公式 [[eqref:eq:对称性张量]] 的张量被称作对称性张量 [[cite:Singh2010]] ，图 [[ref:fig:对称性张量和对称性张量网络]] (a)使用图形标记法展示了此关系。
需要注意对称性张量和对称矩阵完全不同，对称矩阵是做交换两个指标的转置变换下不变的矩阵，对称性张量是在每个指标中各自做相同的群元素代表的群变换下不变的张量。

#+begin_export latex
\begin{figure}
\centering
\input{tikz/symmetry.tikz}
\caption{对称性张量和对称性张量网络}
\label{fig:对称性张量和对称性张量网络}
\note{注：
(a)中，对张量做一个对称性变换相当与在张量的每个指标上作用上这个指标上 $g$ 的群表示矩阵，因为是群是紧致的，我们可以给张量找到一组合适的基使得矩阵是酉的。
(b)中，如果张量网络中的每个张量都是对称性张量，我们可以在每个张量的周围都加上群的变换矩阵，而不改变张量网络的值，得到等式的左侧；
而两个张量彼此相互收缩的线性空间是相互共轭的，所以他们的群表示是互逆的，所有的虚拟边上的两个矩阵可以相互抵消而不改变张量网络的值，得到等式的右侧；
所以原有的张量网络等于只在物理边上做群变换，即整个张量网络的收缩结果是对称性张量。}
\end{figure}
#+end_export

从图 [[ref:fig:对称性张量和对称性张量网络]] (b) 中可以很明显看出，对称性张量收缩结果仍然是对称性张量。
所以对于一个已知满足某个对称性的波函数，使用张量网络表示时，可以使用限制更强的拟设：张量网络态中每个张量都是对称性张量。
波函数的物理指标有明确的物理意义，所以给定对称群的群表示是固定的。
而对于一个张量网络态，我们可以将每个虚拟指标所在的线性空间也看作对称群的一个表示空间，
从而我们可以对张量网络态中的每个张量各自做对称性变换，这样每个张量都可以被设置为对称性张量。
值得注意的是，这种虚拟指标所在空间的群表示是任意的。

一个对称性张量的每个边所在的空间都是群的表示空间，空间 $V$ 可以分解为
\begin{equation}
V \cong \bigoplus_{s} d_s V^{s} \cong \bigoplus_{s} (D^{s} \otimes V^{s}),
\end{equation}
其中 $V^s$ 是群的第 $s$ 个不可约表示空间， $d_s$ 是他的重数，这里 $D^s$ 是 $d_s$ 维的简并空间。

我们可以使用 $U_g^r$ 来作张量的第 $r$ 个指标的基，每个指标的空间 $V^r = \bigoplus_s (D^{r,s} \otimes V^s)$ 中，使用 $(s,\alpha_s, m_s)$ 来作为基底。
其中 $s$ 标记了不同的不可约表示， $\alpha_s$ 是简并空间的指标，即 $\alpha_s = 0,1,\cdots d_s-1$ ，而 $m_s$ 是这个不可约表示空间中的指标。

在这个基下，一个张量是一个对称性张量的条件是
+ 0阶 :: 标量显然是一个对称性张量。
+ 1阶 :: 其非零元素只能位于平凡的不可约表示中，即 $s=0$ ，而 $m_0=0$ 。
+ 2阶 :: 其非零元素的两个指标需要在相同的不可约表示空间中，且两者的 $m_s$ 相反，即张量需要满足形式
\begin{equation}
T_{(s_0,\alpha_{s_0},m_{s_0}),(s_1,\alpha_{s_1},m_{s_1})} =
P_{(s_0,\alpha_{s_0}),(s_1,\alpha_{s_1})} \delta_{s_0,s_1}
\begin{pmatrix} s_0 \\ m_{s_0} \quad m_{s_1} \end{pmatrix},
\end{equation}
其中括号是Wigner 1-jm符号。
+ 3阶 :: 张量需要满足形式
\begin{equation}
T_{(s_0,\alpha_{s_0},m_{s_0}),(s_1,\alpha_{s_1},m_{s_1}),(s_2,\alpha_{s_2},m_{s_2})} =
P_{(s_0, \alpha_{s_0}),(s_1, \alpha_{s_1}),(s_2, \alpha_{s_2})}
\begin{pmatrix}
s_0 & s_1 & s_2 \\
m_0 & m_1 & m_2
\end{pmatrix},
\end{equation}
其中括号是Wigner 3-jm符号。
+ 更高阶 :: 张量需要可以被分解为多个3阶对称性张量收缩的形式。

如上所示，一般对称群的对称性张量结构十分复杂，但对于Abel群来说，情况却十分简单。
Abel群的不可约表示一定是1维的，所以恒有 $m_s=0$ ,故我们将 $m_s$ 省略，使用 $(s,\alpha_s)$ 作为基。
此时 $R$ 阶的对称性张量需要满足
\begin{equation}
U_g^{\otimes R} T_{(s_0,\alpha_{s_0}),(s_1,\alpha_{s_1}),\cdots (s_{R-1},\alpha_{s_{R-1}})} =
T_{(s_0,\alpha_{s_0}),(s_1,\alpha_{s_1}),\cdots (s_{R-1},\alpha_{s_{R-1}})},
\end{equation}
而 $U_g^{\otimes R}$ 中每个项目 $U_g^r = U_g^{s_r}$ ，作为一个一维的酉矩阵，就是一个复数。
所以我们得到：
\begin{equation}
T_{(s_0,\alpha_{s_0}),(s_1,\alpha_{s_1}),\cdots (s_{R-1},\alpha_{s_{R-1}})}
\prod_r^{R-1}U_g^{s_r}
=
T_{(s_0,\alpha_{s_0}),(s_1,\alpha_{s_1}),\cdots (s_{R-1},\alpha_{s_{R-1}})}.
\end{equation}
为此，张量需要满足形式：
\begin{equation}\label{eq:Abel对称张量的原始形式}
T_{(s_0,\alpha_{s_0}),(s_1,\alpha_{s_1}),\cdots (s_{R-1},\alpha_{s_{R-1}})} =
P_{(s_0, \alpha_{s_0}),(s_1, \alpha_{s_1}),\cdots (s_{R-1}, \alpha_{s_{R-1}})}
C(s_0,s_1,\cdots s_{R-1}) ,
\end{equation}
其中
\begin{equation}
C(s_0, s_1, \cdots s_{R-1}) = \left\{\begin{aligned}
1 \quad & \text{如果对于任意$g$有}  \quad \prod_{r=0}^{R-1} U_g^{s_r} = 1 ,\\
0 \quad & \text{其他情况},
\end{aligned}\right.
\end{equation}
是对称群决定的对称性条件。
将公式 [[eqref:eq:Abel对称张量的原始形式]] 稍作变形得到：
\begin{equation}\label{eq:Abel对称张量的形式}
T_{(s_0,\alpha_{s_0}),(s_1,\alpha_{s_1}),\cdots (s_{R-1},\alpha_{s_{R-1}})} =
\left(P_{s_0,s_1,\cdots,s_{R-1}}\right)_{\alpha_{s_0},\alpha_{s_1},\cdots \alpha_{s_{R-1}}}
R(s_0,s_1,\cdots s_{R-1}) .
\end{equation}
可见Abel群的对称性张量是一个分块的张量，其中分块方案由对称性条件和张量每个边上的不可约表示分解决定。

物理中常见的群是 $Z(2)$ 群和 $U(1)$ 群。
对于 $Z(2)$ 群， $g=e$ 表示不变， $g=z$ 表示反转。
群表示 $0$ 中 $U_e^0 = U_z^0 = +1$ ，另一个群表示 $1$ 中 $U_e^1 = +1$ ， $U_z^1 = -1$ 。
所以 $Z(2)$ 群的对称性条件是：
\begin{equation}\label{eq:Z2对称性条件}
C(s_0, s_1, \cdots s_{R-1}) = \left\{\begin{aligned}
1 \quad & \text{如果}  \quad \bigoplus_{r=0}^{R-1} s_r = 0 ,\\
0 \quad & \text{如果}  \quad \bigoplus_{r=0}^{R-1} s_r = 1 ,
\end{aligned}\right.
\end{equation}
其中 $\bigoplus$ 为异或运算。

而对于 $U(1)$ 群， $g=\theta$ 表示旋转 $\theta$ 。
群表示使用一个整数 $s$ 来标记， $U_\theta^s = \mathrm{e}^{\mathrm{i} s \theta}$ 。
所以 $U(1)$ 群的对称性条件是：
\begin{equation}
C(s_0, s_1, \cdots s_{R-1}) = \left\{\begin{aligned}
1 \quad & \text{如果}  \quad \sum_{r=0}^{R-1} s_r = 0 ,\\
0 \quad & \text{如果}  \quad \sum_{r=0}^{R-1} s_r \neq 0 .
\end{aligned}\right.
\end{equation}

对于 $U(1)$ 群和 $Z(2)$ 的乘积群，可以使用各个子群的群表示的乘积来表示这个群的群表示。
比如对于 $U(1) \times Z(2)$ 群，群元素为 $g=(\theta, p)$ ，其中 $p=e=+1$ 表示不变， $p=z=-1$ 表示反转。
群表示可以标记为 $s=(z, b)$ 其中 $z$ 为整数， $b=0$ 或 $1$ ，而 $U_{\theta,p}^{z, b} = \mathrm{e}^{\mathrm{i} z \theta} p^b$ 。
对称性条件 $C=1$ 的条件为
\begin{equation}
\begin{aligned}
1 &= \prod_{r=0}^{R-1} U_{\theta,p}^{z_r, b_r} \\
&= \prod_{r=0}^{R-1} \mathrm{e}^{\mathrm{i} z_r \theta} p^{b_r} \\
&= \mathrm{e}^{\mathrm{i} \sum_{r=0}^{R-1} z_r \theta} p^{\sum b_r} \quad \forall \theta, p ,
\end{aligned}
\end{equation}
即 $\sum_{r=0}^{R-1} z_r = 0$ 且 $\bigoplus_{r=0}^{R-1} b_r = 0$ 。
故而有
\begin{equation}
\begin{aligned}
&C_{U(1)\times Z(2)} ( (z_0, b_0), (z_1, b_1), \cdots (z_{R-1}, b_{R-1}) ) \\
= &C_{U(1)} (z_0, z_1, \cdots z_{R-1}) C_{Z(2)} (b_0, b_1, \cdots b_{R-1}),
\end{aligned}
\end{equation}
可见对于乘积群，对称性张量非零的条件是满足所有子群的对称性条件：对称性条件为各个子群的对称性条件的乘积：
\begin{equation}
C_{\prod_i G_i} = \prod_i C_{G_i} .
\end{equation}

综上所述，Abel群的对称性张量是一个由对称性条件决定的分块张量，由对称性张量所构成的张量网络整体依然满足这个对称性。
对于已知满足某个对称性的波函数来说，使用对称性张量所构成的张量网络来表示能够很好的减少网络参数。

*** 费米子张量

费米子系统中，由于反对易的性质，大部分用于表示费米子系统波函数的方法需要进行Jordan-Wigner变换，即：
\begin{equation}\label{eq:Jordan-Wigner变换}
\left\{
\begin{aligned}
f_i^\dag &= \mathrm{e} ^{+\mathrm{i} \pi \sum_{j=0}^{i-1} a_j^\dag a_j}  a_i^\dag \\
f_i &= \mathrm{e} ^{-\mathrm{i} \pi \sum_{j=0}^{i-1} a_j^\dag a_j}  a_i .
\end{aligned}
\right.
\end{equation}
其中 $a_i^\dag$ 和 $a_i$ 为硬核波色子的产生湮灭算符，或者说是自旋的上升下降算符。
通过此变换，构造出来的 $f_i^\dag$ 和 $f_i$ 拥有费米子的反对易性质。
这意味这，我们可以将费米子系统的哈密顿量中所有的粒子算符，使用公式 [[eqref:eq:Jordan-Wigner变换]] 进行替换，从而得到了一个非波色子的系统。

Jordan-Wigner变换要求给所有的费米子模式排列成一维序列，并让所有的产生湮灭算符添加一个包含序列前面所有粒子粒子数的相位表达式。
对于一维的近临相互作用来说，这种情况不会有太大问题，因为相位表达式中大部分项目都会相互抵消，
比如：
\begin{equation}
\begin{aligned}
f_{i+1}^\dag f_i
&= \mathrm{e}^{+\mathrm{i}\pi \sum_{j=0}^{i} a_j^\dag a_j} a_{i+1}^\dag \mathrm{e}^{-\mathrm{i} \pi \sum_{j=0}^{i-1} a_j^\dag a_j} a_i \\
&= \mathrm{e}^{+\mathrm{i}\pi a_i^\dag a_i} a_{i+1}^\dag a_i ,
\end{aligned}
\end{equation}
可见一维情况的近临相互作用经过Jordan-Wigner变换后依然是近临相互作用。

但是对于二维系统来说，将所有物理边排列成一行后，原本行间的近临相互作用变成了长程的相互作用，如：
\begin{equation}
f_{i+1,j}^\dag f_{i,j} = \mathrm{e} ^ {+\mathrm{i}\pi (\sum_{k=j}^{L_2-1} a_{i,k}^\dag a_{i,k} + \sum_{k=0}^{j-1} a_{i+1,k}^\dag a_{i+1,k})} a_{i+1,j}^\dag a_{i,j} .
\end{equation}
所以即使只有近临相互作用的二维系统，进行Jordan-Wigner变换时，也会引入大量的交换费米子产生的相位符号，并且这是多体且长程的。
当应用Jordan-Wigner变换于张量网络态时，这种长程相互作用，会极大地削弱张量网络态的表示能力。

一种针对费米子的张量网络态可以解决这个问题。
考虑公式 [[eqref:eq:投影纠缠对阐述的一般张量网络]] ，这种张量网络态的阐述中，
使用母态中的纠缠对建立关联，并使用投影算子将母态投影到真实的物理空间中。
如果直接将母态中的物理产生算符替换成真实的费米子产生算符，会破坏原本的网络中，
各个张量和各个边所表示的收缩运算可以随意交换次序的性质。
我们但是我们可以退而求其次，假设包含物理粒子的物理纠缠对，即表示物理边的每组纠缠对
\begin{equation}
P_{\text{物理}, r} = a_{r+B,0}^{\dag d_{r+B}} c_r^{\dag d_{r+B}} ,
\end{equation}
整体呈现没有费米子的性质。
即设 $a_{r+B}^{\dag d_{r+B}}$ 和 $c_r^{\dag d_{r+B}}$ 对于不同的 $d_{r+B}$ 始终拥有相同的费米子奇偶性。
这样的话，母态中产生物理粒子的部分，即张量网络中的物理边，整体是一个波色的算符，可以随意交换顺序。
类似的，对于每组虚拟纠缠对
\begin{equation}
P_{\text{虚拟}, b} = a_{b,0}^{\dag d_b} a_{b,1}^{\dag d_b} ,
\end{equation}
我们也可以将其中的某些替换成费米子的纠缠对，这样依然可以保持这些纠缠对整体的波色性质。
然而，当我们将物理纠缠对和虚拟纠缠对中一部分粒子替换为费米子后，
投影算符中的湮灭算符也对应地变成了费米子，
整体并不能再随意交换了。

考虑到凝聚态物理中，大部分系统的费米子数目是守恒的，即系统至少满足 $U(1)$ 对称性。
我们可以将这个条件先弱化为 $Z(2)$ 对称性，按照 [[ref:sec:::对称性张量]] 中的结论，
我们可以使用 $Z(2)$ 对称性张量来构成表示这个系统的张量网络态。
此时，每个张量网络中的每个张量都是在 $Z(2)$ 对称性变化下不变的分块张量，
公式 [[eqref:eq:投影纠缠对阐述的一般张量网络]] 中投影算符可以写为：
\begin{equation}
\begin{aligned}
P_{\text{投影}, n} =
&(A_{n, (s_0, s_1, \cdots s_{R-1})})_{\alpha_{s_0}, \alpha_{s_1}, \cdots \alpha_{s_{R-1}}} \\
&C(s_0, s_1, \cdots s_{R-1}) \\
&\prod_{j=0}^{\mathrm{rank}(A_n) - 1} 
a^{(s_j, \alpha_{s_j})}_{X_{A_n,j},Y_{A_n, j}} ,
\end{aligned}
\end{equation}
由于只涉及到单个张量，这里为了便利省略了指标中表示张量所有的标记，即将 $s_{A_n,j}$ 写成了 $s_{j}$ 。

这里的 $C(s_0, s_1,\cdots s_{R-1})$ 为公式 [[eqref:eq:Z2对称性条件]] 所描述的 $Z(2)$ 群的对称性条件。
容易验证，当 $C(s_0, s_1, \cdots s_{R-1}) \neq 0$ 时，湮灭算子部分
\begin{equation}
\prod_{j=0}^{\mathrm{rank}(A_n) - 1} 
a^{(s_j, \alpha_{s_j})}_{X_{A_n,j},Y_{A_n, j}}
\end{equation}
一定是波色的。
这保证了投影算子的每个非零项都是波色的，所以投影算子整体是波色的，
从而我们可以对正常的张量一样，随意交换投影算子。

由此可见，我们可以使用 $Z(2)$ 对称性的张量加上含有费米子的纠缠对湮灭算符，
作为费米子张量来构造用于描述费米子系统的张量网络。
这种情况下，我们必须使用纠缠对阐述来理解张量网络态，因为我们需要在母态中包含含有费米子的纠缠对产生算符。

对于费米子张量来说，我们也可以使用更强的 $U(1)$ 对称性，因为更强的对称性对分块有着更强的限制，
对称性条件依然能保证有费米子性质的元素一定为零。
而为了确保费米子张量的可交换性质，一定存在某个对称性。为了区分，我们将这种对称性前面加上词缀 `fermi-' ，
如 fermi-$U(1)$ 对称性 或者 fermi-$Z(2)$ 对称性。
而纠缠对中体现对称性的粒子不是费米子时，我们在对称性前面加上词缀 `bose-' ，如
bose-$U(1)$ 对称性或者bose-$Z(2)$ 对称性。
同样，我们可以将这些对称群进行乘积，比如 fermi-$U(1) \times$ bose-$U(1)$ 对称性，
其可以同时描述电子数和z方向自旋的守恒。

综上所述，费米子张量由某个群的对称性张量和含有费米子的纠缠对构成。
对称性张量即分块的张量，他的每个边上的每个维度都有一个对称群表示的属性，这些属性共同确定了张量分块的方案。
而一组纠缠对的性质中，每个纠缠对是否是费米的性质可以完全由张量边上的对称群表示确定，
但是每个张量边上的湮灭算子到底湮灭的是纠缠对中靠前的那个粒子还是靠后的那个粒子是不确定的。
为此，我们需要给每个边额外加上一个属性，标记这个边对应的产生算符处于纠缠对中的哪一个。
本论文中，使用一个名为费米箭头的布尔数标记纠缠对中的先后顺序：0表示在纠缠对中靠前，1表示在纠缠对中靠后。
当两个张量的边相连时，两个张量的边湮灭的是纠缠对中的两个粒子，必然一个靠前一个靠后，
所以彼此相连的两个边上的费米箭头必然一个为0一个为1。

** 费米子张量上的张量操作 <<sec::费米子张量上的张量操作>>

费米子张量中，
对称性张量的各种张量操作过程中与寻常的张量没有差别，
而纠缠对中引入费米子却会改变几乎所有的张量操作，
现在我们需要对各种张量运算一个一个考虑费米子的影响。

*** 张量转置

张量转置是寻常张量中特别普遍的操作。寻常的张量转置仅仅是数据的重新排列，
但是对于费米子张量，边的顺序关系到了湮灭算符的顺序：
交换湮灭算符时，会产生符号。

考虑投影子
\begin{equation}
P_n = 
(A_n)_{i_{0} i_{1} \cdots}
a_0^{i_0} a_1^{i_1} \cdots ,
\end{equation}
交换相邻的两个湮灭算符，如第 $j$ 和第 $j+1$ 个湮灭算符时，如果 $p(a_j^{i_j}) p(a_{j+1}^{i_{j+1}}) = 1$ 则会产生符号，
如果为 $0$ 则不会产生符号，
其中
\begin{equation}
p (a) = \left\{\begin{aligned}
1  \quad & \text{如果} a \text{是费米的} \\
0  \quad & \text{如果} a \text{是波色的} .
\end{aligned}\right.
\end{equation}
为了简单表述，我们称呼这时产生了 $p(a_j^{i_j}) p(a_{j+1}^{i_{j+1}})$ 个符号。

注意到费米子张量是分块的张量，每个分块上的边上有着相同的对称群表示，所以他们湮灭算符的费米子奇偶性也是一样的，
故张量转置时，每个分块产生的符号数是一样的，这为具体实现提供了很大的便利，
因为我们可以一个分块一个分块地分析符号，而不必每个元素单独分析一遍。

当进行更加复杂的转置时，可以分解为多个近临的湮灭算符交换，容易验证：
\begin{equation}
\begin{aligned}
P_n &= 
(A_n)_{i_{0} i_{1} \cdots}
a_0^{i_0} a_1^{i_1} \cdots \\
&= (A'_n)_{i_{s_0} i_{s_1} \cdots} a_{s_0}^{i_{s_0}} a_{s_1}^{i_{s_1}} \cdots ,
\end{aligned}
\end{equation}
其中 $s_0, s_1, \cdots$ 为一个排列，描述了如何转置，而 $A'_n$ 满足：
\begin{equation}
(A'_n)_{i_{s_0} i_{s_1}\cdots} = (A_n)_{i_0 i_1 \cdots} (-1)^{\sum_{j<k,s_j>s_k} p(a_j^{i_j}) p(a_k^{i_k})} .
\end{equation}

*** 张量的共轭

共轭用于将波函数从希尔伯特空间转换到对偶空间，从而进行内积运算。
寻常的张量网络所表示的态进行共轭可以表示为每个张量都取共轭后所组成的张量网络。
对于费米子张量网络，依然有类似的性质。

考虑波函数 $P M | \Omega\rangle$ ，其中 $P$ 和 $M$ 为公式 [[eqref:eq:投影纠缠对阐述的一般张量网络]] 所展示，
求共轭得到 $\langle \Omega | M^\dag P^\dag$ ，其中
\begin{equation}
\left\{
\begin{aligned}
M^\dag &=
\prod_{b=0}^{B-1} a_{b,1}^{d_b} a_{b,0}^{d_b}
\prod_{r=0}^{R-1} c_r^{d_{r+B}} a_{r+B,0}^{d_{r+B}} , \\
P^\dag &= 
\prod_{n=0}^{N-1} (A_n)^\dag_{i_{A_n, 0} i_{A_n, 1} \cdots i_{A_n, \mathrm{rank}(A_n) -1}}
\prod_{j=\mathrm{rank}(A_n) - 1}^{0}
a^{\dag i_{A_n, j}}_{X_{A_n,j},Y_{A_n, j}} . \\
\end{aligned}
\right.
\end{equation}
这里 $P^\dag$ 可以先恢复所有的产生算符的顺序得到
\begin{equation}
P^\dag = 
\prod_{n=0}^{N-1} (-1)^{\sum_{j<k} p(a_j^{i_j}) p(a_k^{i_k})}
(A_n)^\dag_{i_{A_n, 0} i_{A_n, 1} \cdots i_{A_n, \mathrm{rank}(A_n) -1}}
\prod_{j=0}^{\mathrm{rank}(A_n) - 1}
a^{\dag i_{A_n, j}}_{X_{A_n,j},Y_{A_n, j}} . \\
\end{equation}
然而现在，无论是纠缠对的母态 $M^\dag$ 还是投影子中的产生算符，都不符合费米子张量的形式，下面我们一步步地恢复原本的形式。

当计算某个物理量时，真正计算的是
\begin{equation}
\langle \Psi^\dag_1 |O| \Psi_2 \rangle = \langle \Omega | P^\dag_1 M^\dag_1 O M_2 P_2 | \Omega \rangle ,
\end{equation}
考虑其中某组虚拟粒子所在的子空间，表达式为
\begin{equation}
\langle \Omega | a^{d_1} a^{\dag d_2} a^{d_3} a^{\dag d_4} | \Omega \rangle  ,
\end{equation}
其中 $a^{d_1}$ ， $a^{d_2}$ ， $a^{d_3}$ ， $a^{d_4}$ 分别是  $P^\dag_1$ ， $M^\dag_1$ ， $M_2$ ， $P_2$ 中这组粒子的算符，
注意这些算符中的上标 $d_i$ 指的是不同的粒子。
我们可以将共轭空间中的虚拟粒子替换成新的虚拟粒子，其结果依然不变，得到
\begin{equation}
\langle \Omega | a^{d_1} a^{\dag d_2} a^{d_3} a^{\dag d_4} | \Omega \rangle =
\langle \Omega | a'^{d_1} a'^{\dag d_2} a^{d_3} a^{\dag d_4} | \Omega \rangle .
\end{equation}
综上，我们考虑共轭后的张量网络时，可以完全不考虑希尔伯特空间中相同的虚拟粒子的影响。

而对于连接两个张量 $P_x$ 和 $P_y$ 的虚拟边，考虑每个元素，我们可以将湮灭算符对往后面移动：
\begin{equation}
\begin{aligned}
&\overbrace{\left(\cdots (a'_1 a'_0) \cdots\right)}^{M^\dag}
\underbrace{\cdots \overbrace{\left(\cdots a_0^{\prime \dag} \cdots\right)}^{P^\dag_x} \cdots \overbrace{\left(\cdots a_1^{\prime \dag} \cdots\right)}^{P^\dag_y} \cdots}_{P^\dag} \\
= &\left(\cdots\right)\cdots \left(\cdots a'_1 a'_0 a_0^{\prime \dag} \cdots\right) \cdots \left(\cdots a_1^{\prime \dag} \cdots\right)\cdots \\
= &\left(\cdots\right)\cdots \left(\cdots a'_1 \cdots\right) \cdots \left(\cdots a'_0 a_0^{\prime \dag} a_1^{\prime \dag} \cdots\right)\cdots \\
= &\left(\cdots\right)\cdots \left(\cdots a'_1 \cdots\right) \cdots \left(\cdots a'_0 \cdots\right)\cdots (a_0^{\prime \dag} a_1^{\prime \dag}) .
\end{aligned}
\end{equation}
可见所有的虚拟边的共轭，都可以看作正常的费米子张量的费米箭头进行了翻转。

类似的，对于物理边，考虑每一个元素，我们一样可以将 $M^\dag$ 中的算符向后一定：
\begin{equation}
\begin{aligned}
&\overbrace{\left(\cdots (c a') \cdots\right)}^{M^\dag}
\underbrace{\cdots \overbrace{\left(\cdots a'^\dag \cdots\right)}^{P^\dag_n} \cdots}_{P^\dag} \\
= &\left(\cdots\right) \cdots \left(\cdots c a' a'^\dag \cdots\right) \cdots \\
= &\left(\cdots\right) \cdots \left(\cdots a' a'^\dag c \cdots\right) \cdots \\
= &\left(\cdots\right) \cdots \left(\cdots a' \cdots\right) \cdots (a'^\dag c) .
\end{aligned}
\end{equation}
而 $(a'^\dag c)$ 最终将和原空间中的 $(a^\dag c^\dag)$ 组合， 恢复张量网络的求和的形式，相关项目为：
\begin{equation}
\begin{aligned}
\sum_{d'} a'^{\dag {d'}} c^{d'} \sum_d a^{\dag d} c^{\dag d}
&= \sum_{d d'} a^{\dag d} a'^{\dag {d'}} c^{d'} c^{\dag d} \\
&= \sum_{d d'} a^{\dag d} a'^{\dag d'} \delta_{d d'} \\
&= \sum_{d} a^{\dag d} a'^{\dag d} .
\end{aligned}
\end{equation}
这意味这，我们可以简单地认为物理的产生算符在表示整个 $\langle \Psi_1 | O | \Psi_2 \rangle$ 的张量网络中是一个普通的边，
他对应的纠缠对中的产生算副靠前，而类似的，共轭空间中的湮灭算符在纠缠对中靠后。
这样不必再像公式 [[eqref:eq:投影纠缠对阐述的一般张量网络]] 中的 $M$ 那样将物理边和虚拟边分开对待。

综上所述，当我们对一个费米子张量进行共轭时，我们需要
1. 对每个元素取共轭；
2. 加上一个全转置的符号 $(-1)^{\sum_{j<k} p(a_j^{i_j}) p(a_k^{i_k})}$ ；
3. 将所有的费米箭头翻转。

*** 翻转费米箭头

费米箭头用于表示纠缠对中产生算符的顺序，而调换产生算符的顺序常用于其他运算的预处理中。
考虑两个投影子以及母态中的纠缠对产生算符：
\begin{equation}
\begin{aligned}
P M =
&(A_n)_{i_{0} i_{1} \cdots} a_0^{i_0} a_1^{i_1} \cdots \\
&(B_n)_{j_{0} j_{1} \cdots} b_0^{j_0} b_1^{j_1} \cdots \\
& a_x^{\dag d} b_y^{\dag d} ,
\end{aligned}
\end{equation}
其中 $A$ 的第 $x$ 个边与 $B$ 的第 $y$ 个边相连，
交换纠缠对中的两个产生算符得到
\begin{equation}
\begin{aligned}
P M =
&(A_n)_{i_{0} i_{1} \cdots} a_0^{i_0} a_1^{i_1} \cdots \\
&(B_n)_{j_{0} j_{1} \cdots} b_0^{j_0} b_1^{j_1} \cdots \\
& (-1)^{p(a_x^{\dag d}) p(b_y^{\dag d})} b_y^{\dag d} a_x^{\dag d} .
\end{aligned}
\end{equation}
可见当我们翻转两个张量彼此相连的边上的费米箭头时，只产生了一个符号，
不妨将它放置在 $A$ 中，得到：
\begin{equation}
\begin{aligned}
P M =
& (-1)^{p(a_x^{i_x})} (A_n)_{i_{0} i_{1} \cdots} a_0^{i_0} a_1^{i_1} \cdots \\
&(B_n)_{j_{0} j_{1} \cdots} b_0^{j_0} b_1^{j_1} \cdots \\
& b_y^{\dag d} a_x^{\dag d} ,
\end{aligned}
\end{equation}
其中我们用到了
\begin{equation}\label{eq:翻转箭头时的符号推导}
\begin{aligned}
p(a_x^{\dag d}) p(b_y^{\dag d}) &= p(a_x^{\dag d}) ^ 2 \\
&= p(a_x^{\dag d}) \\
&= p(a_x^{i_x}) .
\end{aligned}
\end{equation}
公式 [[eqref:eq:翻转箭头时的符号推导]] 中第一行的等式来自纠缠对中两个粒子拥有相同的费米子奇偶性；
第二行的等式来自对于任意 $a$ ， $p(a)$ 取 $0$ 或者 $1$ ；
第三行的等式来自于整个张量网络中在 $a_x$ 这个粒子的子空间上的分量为
\begin{equation}
\langle \Omega | a^{i_x} a_x^{\dag d} |\Omega\rangle = \delta_{i_x, d} ,
\end{equation}
从而 $i_x \neq d$ 时，张量网络整体都为 $0$ 的事实。

类似的，我们也可以将符号放置在 $B$ 中，从而得到：
\begin{equation}
\begin{aligned}
P M =
& (A_n)_{i_{0} i_{1} \cdots} a_0^{i_0} a_1^{i_1} \cdots \\
& (-1)^{p(b_y^{j_y})}(B_n)_{j_{0} j_{1} \cdots} b_0^{j_0} b_1^{j_1} \cdots \\
& b_y^{\dag d} a_x^{\dag d} .
\end{aligned}
\end{equation}
在实现费米子张量时，我们需要注意在一个网络内翻转费米箭头时，只能会产生一个符号，需要选择放在相连接的两个张量中的哪一个内。
而对于复数张量，我们完全可以产生半个符号即：
\begin{equation}
\begin{aligned}
P M =
& \mathrm{i}^{p(a_x^{i_x})} (A_n)_{i_{0} i_{1} \cdots} a_0^{i_0} a_1^{i_1} \cdots \\
& \mathrm{i}^{p(b_y^{j_y})}(B_n)_{j_{0} j_{1} \cdots} b_0^{j_0} b_1^{j_1} \cdots \\
& b_y^{\dag d} a_x^{\dag d} .
\end{aligned}
\end{equation}

*** 边的合并与拆分

对于寻常张量，边的合并与拆分是很常见的，比如将矩阵视为一个向量，实际上就是将二阶张量的两个边合并为一个边的过程。
对于寻常的稠密张量，边的合并与拆分并不需要真正的数据移动或变换，但是对于对称性张量来说，数据移动是不可避免的。
假设相邻的两个边，其对称群表示分别是 $(s_0^0, s_0^1, \cdots s_0^{d_0-1})$ 和 $(s_1^0, s_1^1, \cdots s_1^{d_1-1})$ ，
其中 $d_0$ 和 $d_1$ 分别是两个边的总维度。
合并成一个边后，群表示为：
\begin{equation}
\begin{aligned}
( &S(s_0^0, s_1^0), S(s_0^0, s_1^1), \cdots S(s_0^0, s_1^{d_1-1}), \\
  &S(s_0^1, s_1^0), S(s_0^1, s_1^1), \cdots S(s_0^1, s_1^{d_1-1}), \\
  &\cdots \\
  &S(s_0^{d_0-1}, s_1^0), S(s_0^{d_0-1}, s_1^{d_0-1}), \cdots S(s_0^{d_0-1}, s_1^{d_1-1})) ,
\end{aligned}
\end{equation}
其中 $S$ 满足：
\begin{equation}
U_g^{s_0} U_g^{s_1} = U_g^{S(s_0, s_1)} , \forall g \in G .
\end{equation}

不难看出，对于 $Z(2)$ 群来说，群表示使用 $0$ 和 $1$ 标记， $S$ 则是布尔异或运算，其构成了表示空间上的 $Z(2)$ 群；
而对于 $U(1)$ 群来说，群表示使用整数标记， $S$ 则是整数加法运算，其构成了表示空间上的 $Z$ 群。
对于更加复杂的Abel群，群表示空间为子群的群表示空间的乘积，
我们可以直接使用子群们的表示空间群的乘积来得到自己的表示空间群，从而得到 $S$ 运算。
当我们得到合并后的边的对称群表示后，我们通常需要再交换各个维度，将相同对称群表示的维度放在一起，从而保证张量的分块数目尽可能地少。

而对于费米子张量，边上的对称群表示需要按照对称性张量的规则做变换外，纠缠对也需要进行变换。
仍然以合并两个相邻的边为例，考虑：
\begin{equation}
\begin{aligned}
P M =
&(A_n)_{i_{0} i_{1} \cdots} \left(\cdots a_x^{i_x} a_{x+1}^{i_{x+1}} \cdots\right)\\
&(B_n)_{j_{0} j_{1} \cdots} \left(\cdots b_y^{j_y} b_{y+1}^{j_{y+1}} \cdots\right) \\
&\left( a_x^{\dag d_0} b_y^{\dag d_0} \right) \left( a_{x+1}^{\dag d_1} b_{y+1}^{\dag d_1} \right) ,
\end{aligned}
\end{equation}
当我们合并边时，纠缠对也需要合并，得到：
\begin{equation}
\begin{aligned}
P M =
&(A_n)_{i_{0} i_{1} \cdots} \left(\cdots a_x^{i_x} a_{x+1}^{i_{x+1}} \cdots\right)\\
&(B_n)_{j_{0} j_{1} \cdots} \left(\cdots b_y^{j_y} b_{y+1}^{j_{y+1}} \cdots\right) \\
&
(-1)^{p(b_y^{d_0}) p(b_{y+1}^{d_1})}
(a_x^{d_0}a_{x+1}^{d_1})^\dag
(b_y^{d_0} b_{y+1}^{d_1})^\dag
.
\end{aligned}
\end{equation}
类似翻转费米箭头的情况，我们可以选择将产生的单个符号放在 $A$ 中或者 $B$ 中：
\begin{equation}
\begin{aligned}
PM=
&
(-1)^{p(a_x^{i_x}) p(a_{x+1}^{i_{x+1}})}
(A_n)_{i_{0} i_{1} \cdots} \left(\cdots a_x^{i_x} a_{x+1}^{i_{x+1}} \cdots\right)\\
&
(B_n)_{j_{0} j_{1} \cdots} \left(\cdots b_y^{j_y} b_{y+1}^{j_{y+1}} \cdots\right) \\
&
(a_x^{d_0}a_{x+1}^{d_1})^\dag
(b_y^{d_0} b_{y+1}^{d_1})^\dag
,
\end{aligned}
\end{equation}
或者
\begin{equation}
\begin{aligned}
PM=
&(A_n)_{i_{0} i_{1} \cdots} \left(\cdots a_x^{i_x} a_{x+1}^{i_{x+1}} \cdots\right)\\
&
(-1)^{p(b_y^{j_y}) p(b_{y+1}^{j_{y+1}})}
(B_n)_{j_{0} j_{1} \cdots} \left(\cdots b_y^{j_y} b_{y+1}^{j_{y+1}} \cdots\right) \\
&
(a_x^{d_0}a_{x+1}^{d_1})^\dag
(b_y^{d_0} b_{y+1}^{d_1})^\dag
.
\end{aligned}
\end{equation}

如果要合并并非相连的两个边，需要进行张量的转置，
而如果要合并费米箭头不一致的两个边，需要先对费米箭头进行翻转。
容易验证，对于合并连续的 $l$ 个边，其产生的符号等于这些合并的边的全转置产生的符号：
\begin{equation}
\begin{aligned}
PM=
&
(-1)^{\sum_{m<n} p(a_m^{i_m}) p(a_n^{i_n})}
(A_n)_{i_{0} i_{1} \cdots} \left(\cdots a_x^{i_x} a_{x+1}^{i_{x+1}} \cdots a_{x+l-1}^{i_{x+l-1}} \cdots\right)\\
&
(B_n)_{j_{0} j_{1} \cdots} \left(\cdots b_y^{j_y} b_{y+1}^{j_{y+1}} \cdots b_{y+l-1}^{j_{y+l-1}} \cdots\right) \\
&
(a_x^{d_0}a_{x+1}^{d_1}\cdots a_{x+l-1}^{d_{l-1}})^\dag
(b_y^{d_0} b_{y+1}^{d_1}\cdots b_{y+l-1}^{d_{l-1}})^\dag
,
\end{aligned}
\end{equation}
或者
\begin{equation}
\begin{aligned}
PM=
&
(A_n)_{i_{0} i_{1} \cdots} \left(\cdots a_x^{i_x} a_{x+1}^{i_{x+1}} \cdots a_{x+l-1}^{i_{x+l-1}} \cdots\right)\\
&
(-1)^{\sum_{m<n} p(b_m^{j_m}) p(b_n^{j_n})}
(B_n)_{j_{0} j_{1} \cdots} \left(\cdots b_y^{j_y} b_{y+1}^{j_{y+1}} \cdots b_{y+l-1}^{j_{y+l-1}} \cdots\right) \\
&
(a_x^{d_0}a_{x+1}^{d_1}\cdots a_{x+l-1}^{d_{l-1}})^\dag
(b_y^{d_0} b_{y+1}^{d_1}\cdots b_{y+l-1}^{d_{l-1}})^\dag
,
\end{aligned}
\end{equation}


值得一提的是，这些产生算符组合而来的复合粒子产生算符依然可以作为张量网络中的纠缠对，因为依然有
\begin{equation}
(b_y^{d'_0} b_{y+1}^{d'_1}\cdots b_{y+l-1}^{d'_{l-1}})
(b_y^{d_0} b_{y+1}^{d_1}\cdots b_{y+l-1}^{d_{l-1}})^\dag
=
\delta_{d_0 d'_0}
\delta_{d_1 d'_1}
\cdots
\delta_{d_{l-1} d'_{l-1}}
\end{equation}

在计算 $\sum_{m<n} p_m p_n$ 原本的两层循环可以使用一个技巧压缩为一层循环：
\begin{equation}
\begin{aligned}
\sum_{m<n} p_m p_n
&= \frac{\sum_{m,n} p_m p_n - \sum_{n} p_n^2}{2} \\
&= \frac{(\sum_{n} p_n)^2 - \sum_{n} p_n}{2} .
\end{aligned}
\end{equation}
由于它出现在 $-1$ 的指数上，我们只关注它的二进制第一位，即只关注$(\sum_{n} p_n)^2 - \sum_{n} p_n$ 的二进制第二位，
而对于任意 $x$ ， $x^2 - x$ 的二进制第二位和 $x$ 的二进制第二位相同，所以
\begin{equation}
(-1)^{\sum_{m<n} p_m p_n}
=
(-1)^{ \frac{2 \& \sum_n{p_n} }{ 2 }} ,
\end{equation}
其中 $\&$ 为按位与。

对于边的拆分，由于它是边的合并的逆运算，其产生的符号和边的合并产生的符号完全一样。

*** 张量的收缩

张量的收缩即将两个相连的张量的公共边的所有维度进行求和。
为了收缩两个费米子张量，我们可以按照合并边、做含有费米子的矩阵乘法，拆分边的思路来实现费米子张量的收缩。
接下来，我们介绍一种具体的方案。

对于两个费米子张量 $A$ 和 $B$ ，它们的边分为两组，即公共边和自由边：公共边连接了彼此，而其他边都是自由边。为了进行收缩，我们依次做：
+ 张量转置：将 $A$ 中所有的自由边放置在左侧，公共边放置在右侧，而 $B$ 中所有的公共边放置在左侧，自由边放置在右侧。
+ 翻转费米箭头：
  将 $A$ 中所有自由边的费米箭头翻转到位置 $0$ ，如果产生符号，则符号不放在本张量中；
  将 $A$ 中所有公共边的费米箭头翻转到位置 $1$ ，如果产生符号，则符号放在本张量中；
  将 $B$ 中所有自由边的费米箭头翻转到位置 $0$ ，如果产生符号，则符号不放在本张量中；
  将 $B$ 中所有公共边的费米箭头翻转到位置 $0$ ，如果产生符号，则符号不放在本张量中。
+ 边的合并：合并 $A$ 和 $B$ 中所有的公共边和自由边， 得到
\begin{equation}
\left\{
\begin{aligned}
P_A &= A_{i_0 i_1} a_0^{i_0} a_1^{i_1} ,\\
P_B &= B_{j_0 j_1} b_0^{j_0} b_1^{j_1} ,\\
M &= b_0^{\dag d} a_1^{\dag d} ,
\end{aligned}
\right.
\end{equation}
  其中，
  $A$ 的自由边合并时如果产生符号，则不放在本张量中；
  $A$ 的公共边合并时如果产生符号，则放在本张量中；
  $B$ 的自由边合并时如果产生符号，则不放在本张量中；
  $B$ 的公共边合并时如果产生符号，则不放在本张量中；
+ 矩阵乘法：直接进行矩阵乘法：
\begin{equation}
\begin{aligned}
P_A P_B M
&=
A_{i_0 i_1}a_0^{i_0} a_1^{i_1}
B_{j_0 j_1}b_0^{j_0} b_1^{j_1}
b_0^{\dag d} a_1^{\dag d} \\
&=
A_{i_0 i_1}
B_{j_0 j_1}
\delta_{j_0 i_1}
a_0^{i_0}
b_1^{j_1}.
\end{aligned}
\end{equation}
+ 边的拆分：拆分剩下的两个自由边，恢复张量原本的形状，产生的符号一律不放在本张量中。
+ 翻转费米箭头：
  将费米箭头翻转到 $A$ 和 $B$ 中原本的位置，产生的符号一律不放在本张量中。

在这个方案中，公共边的合并与费米箭头翻转产生的符号都放且仅放在张量 $A$ 中了。
而对于自由边的合并与第一次费米箭头翻转，完全和自由边的拆分与第二次翻转相互抵消。
由此，我们可以将费米子的张量收缩转换成对称性矩阵的矩阵乘法，即分块的矩阵乘法。

*** 张量的分解

张量的分解即张量变形为矩阵后的矩阵分解，包括QR分解，奇异值分解等。
作为张量收缩的逆操作，我们完全可以讲张量收缩的方案倒过来，作为张量分解的方案，除了最中间的矩阵乘法，替换为矩阵分解。
下面我们介绍一种张量分解的方案。

对于矩阵 $A$ ，我们要将它分解为 $A = B \prod_{k=0}^{K-1} C_k D$ 。
对于奇异值分解，我们有
\begin{equation}
\left\{
\begin{aligned}
B &= U \\
D &= V \\
K &= 1 \\
C_0 &= S.
\end{aligned}
\right.
\end{equation}
对于QR分解，我们有
\begin{equation}
\left\{
\begin{aligned}
B &= Q \\
D &= R \\
K &= 0 .
\end{aligned}
\right.
\end{equation}
对于LQ分解，我们有
\begin{equation}
\left\{
\begin{aligned}
B &= L \\
D &= Q \\
K &= 0 .
\end{aligned}
\right.
\end{equation}
为了进行张量的分解，我们沿着反方向的矩阵收缩过程，依次做：
+ 张量转置：
  将 $A$ 中的各个边调整到合适的位置，即最终出现在 $B$ 中的边放在左侧，而最终出现在 $D$ 中的边放在右侧。
+ 翻转费米箭头：
  讲张量 $A$ 中所有的费米箭头翻转到位置 $0$ ，如果产生了符号，则符号不放置在张量中。
+ 边的合并：
  将 $A$ 中所有最终出现在 $B$ 中的边合并成一个边，而最终出现在 $D$ 中的边合并成另一个边，如果产生了符号，则符号不放置在张量中。
+ 矩阵分解：直接进行矩阵分解：
\begin{equation}
\begin{aligned}
A_{i_0 i_1} a_0^{i_0} a_1^{i_1} =
&\left( B_{i_0 j_1} \prod_{j=0}^{K-1} C_{j_k, j_{k+1}} D_{j_K, i_1} \right) a_0^{i_0} a_1^{i_1}\\
=
&B_{i_0, j_0} a_0^{i_0} b_0^{j_0} \\
&\prod_{k=0}^{K-1} C_{j'_k, j_{k+1}} c_0^{j'_k} b_1^{j_{k+1}} \\
&D_{j'_{K}, i_1} c_K^{j'_K} a_1^{i_1} \\
&\prod_{k=0}^{K} c_k^{\dag d} b_k^{\dag d} .
\end{aligned}
\end{equation}
+ 边的拆分：拆分 $B$ 和 $D$ 中原先在 $A$ 中的边，恢复边原来的形状，如果产生了符号，则符号不放置在张量中。
+ 翻转费米箭头：将 $B$ 和 $D$ 中原先在 $A$ 中的边上的费米箭头翻转到原本的位置，如果产生了符号，则符号不放置在张量中。

类似张量的收缩，这种方法中，边的合并与第一次翻转费米箭头完全和边的拆分与第二次翻转费米箭头相互抵消。
而在矩阵分解的步骤中，在结果中选取合适的费米箭头，可以让计算成直接的分块张量分解，而没有任何其他的费米子性质。

*** 张量的迹

虽然大部分时候，求迹操作是多余的，但是求迹确实是一个基本操作。
为了对费米子张量进行求迹，我们可以将要求迹的两个边转置到相邻的位置上，并保证费米箭头为 $1$ 的边在费米箭头为 $0$ 的边的前方。
如此，对于将要对第 $x$ 个和第 $x+1$ 个边求迹的张量 $A$ ：
\begin{equation}
\def\a#1{a_{#1}^{i_{#1}}}
P_A = A_{i_0 i_1 \cdots i_{x-1} i_x i_{x+1} i_{x+2} \cdots} \a{0} \a{1} \cdots \a{x-1} \a{x} \a{x+1} \a{x+2} \cdots,
\end{equation}
我们可以得到
\begin{equation}
\def\a#1{a_{#1}^{i_{#1}}}
P_A \left(a_{x+1}^{\dag d} a_{x}^{\dag d} \right) = \left(\delta_{i_x i_{x+1}} A_{i_0 i_1 \cdots i_{x-1} i_{x} i_{x+1} i_{x+2}\cdots} \right) \a{0} \a{1} \cdots \a{x-1} \a{x+1} \cdots
\end{equation}
其中
\begin{equation}
\def\a#1{a_{#1}^{i_{#1}}}
\a{x} \a{x+1}a_{x+1}^{\dag d} a_{x}^{\dag d}
= \delta_{i_{x+1} d} \delta_{i_x d} = \delta_{i_x i_{x+1}} .
\end{equation}

*** 恒等张量

#+begin_export latex
\begin{figure}
\centering
\input{tikz/tensor-exp.tikz}
\caption{张量指数的幂展开}
\label{fig:张量指数的幂展开}
\note{注：张量的指数由幂展开所定义。
不同于矩阵，两个矩阵 $A$ 和 $B$ 相乘只有 $A B$ ，而张量相互收缩时，需要指定收缩时边的关系，即哪两个边应当彼此相连。
而幂展开中含有多个张量的收缩，所以在定义张量的指数时需要给定边之间的对应关系。
}
\end{figure}
#+end_export

有时我们需要得到一个恒等的张量，比如在计算张量的指数时，需要通过进行幂展开：
\begin{equation}
\mathrm{e}^{A} = \sum_{n=0}^{\infty} \frac{1}{n!} A^n ,
\end{equation}
其中的 $A^0$ 为恒等张量， 而 $A^n, n>0$  为多个 $A$ 的收缩。
以一个四阶张量 $A$ 为例，其指数的图形标记如图 [[ref:fig:张量指数的幂展开]] 所示。

恒等的费米子张量需要保证讲其插入两个相连的张量中结果不变，即：
\begin{equation}\label{eq:恒等张量的定义}
(a^{\dag d} b^{\dag d}) = I (a^{\dag d} a^{\prime \dag d}) (b^{\prime \dag d} b^{\dag d}) ,
\end{equation}
易得：
\begin{equation}\label{eq:恒等张量的结果}
I = \delta_{i j} b^{\prime i} a^{\prime j} .
\end{equation}
这里 $(a^{\dag d} b^{\dag d})$ 为表示两个相连张量所连接的边的纠缠对，
当我们插入恒等费米子张量时，我们实际上将这个纠缠对切割成了两个纠缠对，然后使用恒等张量这个投影子对这两个纠缠对进行投影，其结果应当保持不变。

根据公式 [[eqref:eq:恒等张量的定义]] 和公式 [[eqref:eq:恒等张量的结果]] 所展示，
恒等的费米子张量在将费米箭头在位置 $0$ 处的边放置在费米箭头在位置 $1$ 处的边前方时，费米子张量内部的对称性张量正好是寻常的恒等张量。

** 对称性张量网络态和费米子张量网络态

根据
[[ref:sec::对称性张量和费米子张量]]
和
[[ref:sec::费米子张量上的张量操作]]
中的介绍，我们知道对称性张量和费米子张量与寻常的张量一样，可以进行各种张量运算，且与寻常的张量一样，无论是张量还是张量操作都可以随意交换顺序。
通过将一张张量网络态中的张量替换成对称性张量或者费米子张量，我们可以得到用于表示某个特定对称群下不变的波函数或者是费米子的波函数。

本章节中，张量分为寻常的张量，对称性张量和费米子张量，这是为了引入时的便利而划分的。
但这种分类并不合理，因为寻常的张量也可以看作是平凡群下的对称性张量，而费米子张量在不做各种张量操作时，也能体现对称性张量的性质。
现在更改一下不同张量类型的名称约定，这将应用于本论文的整个下文中。
无论是何种张量，都认为是对称性张量，而寻常的张量，则称作是平凡群下的对称性张量。
对称性张量根据纠缠对中，体现对称性的粒子是否存在费米子，分为费米子对称性张量和非费米子对称性张量。
为了简单起见，费米子对称性张量也被称呼费米子张量，为非费米子张量也被称呼为波色子对称性张量或者波色子张量。

在第 [[sec:张量网络态算法]] 章我们将介绍与具体张量类型无关的各种张量网络态算法，其中提到的张量都指对称性张量。

* 张量网络态算法 <<sec:张量网络态算法>>

** 虚时间演化算法

*** 严格波函数的虚时间演化算法

对于一个正定的矩阵，其最大本征值以及对应的本征态可以通过幂法迭代就得，即给定任意初始态 $x_0$ 后，使用
\begin{equation}\label{eq:幂法迭代}
x_{n} = M x_{n-1} , \quad n > 0,
\end{equation}
进行迭代， $x_n$ 随着 $n \to \infty$ 会收敛到最大本征值对应的本征态上。

这是因为使用 $M$ 的本征态 $e_i$ 做基对 $x_0$ 分解后，我们得到：
\begin{equation}
x_0 = e_i a_0^i,
\end{equation}
而矩阵 $M$ 分解得到：
\begin{equation}
M = e_i \lambda_i e_i^\dag,
\end{equation}
其中 $\lambda_i$ 为 $M$ 的本征值 ， $\lambda_0 > \lambda_1 > \lambda_2 > \cdots > 0$ 。
公式 [[eqref:eq:幂法迭代]] 写在此基下为：
\begin{equation}
\begin{aligned}
x_{n} &= e_i a_{n}^i \\
&= M x_{n} \\
&= e_{i'} \lambda_{i'} e_{i'}^\dag e_i a_{n-1}^i \\
&= e_{i'} \lambda_{i'} \delta_{i i'} a_{n-1}^i \\
&= e_{i} \lambda_{i} a_{n-1}^i \\
&= e_{i} \lambda_{i}^n a_0^i ,
\end{aligned}
\end{equation}
即 $a_{n}^i = \lambda_i ^{n} a_0^i$ 。
最大本征值对应的本征态分量相比与其他本征态，比值为：
\begin{equation}\label{eq:幂法的系数比值}
\frac{\lambda_0^n a_0^0}{\lambda_i^n a_0^i} = \left(\frac{\lambda_0}{\lambda_i}\right)^n \frac{a_0^0}{a_0^i} , \quad i>0,
\end{equation}
而 $\frac{\lambda_0}{\lambda_i} > 1$ ， 故 $n \to \infty$ 时，只要 $a_0^0 \neq 0$ ， 即初态含有最大本征值的分量，公式 [[eqref:eq:幂法的系数比值]] 会趋向无穷大，可见最后将收敛到最大本征值对应的本征态。

对于哈密顿量为 $H$ 的系统，为了求得基态，可以使用 $M = \mathrm{e}^{- \tau H}$ 作为幂法中的矩阵进行迭代， 其中 $\tau > 0$ 。
$H$ 的本征值为 $\varepsilon_i$ ， $\varepsilon_0 < \varepsilon_1 < \varepsilon_2 < \cdots$ ，则 $M$ 的本征值为
$\lambda_i = \mathrm{e}^{- \tau \varepsilon_i}$ , $\lambda_0 > \lambda_1 > \lambda_2 > \cdots > 0$ 。
所以使用 $\mathrm{e}^{-\tau H}$ 迭代后，可以得到系统的基态，即：
\begin{equation}\label{eq:幂法虚时间演化}
\lim_{n\to\infty} \mathrm{e}^{-n\tau H} |\psi^0\rangle = |\psi^*\rangle ,
\end{equation}
其中 $| \psi^0 \rangle$ 为任意不和基态完全正交的初态， $|\psi^*\rangle$ 为基态。

如果将系统的无穷温时的密度矩阵 $\rho^0 = I$ 置入初态的位置，则迭代 $n$ 步后为：
\begin{equation}
\rho^n = \mathrm{e}^{-n \tau H} I = \mathrm{e}^{-\beta H} ,
\end{equation}
其中 $\beta = n \tau$ 。
而这便是系统温度为 $\frac{1}{\beta}$ 时的密度矩阵，可见，虚时间演化算法可以看成对系统的降温过程。

*** 逐块虚时间演化算法

严格的虚时间演化算法只能计算粒子数最多约 30 的系统，对于更大的系统，态空间的维度指数上升，无法严格表示波函数。
对于一维只有近临相互作用的系统，表示为矩阵乘积态后，可以使用逐块虚时演化算法求得基态。

对于哈密顿量 $H = H_0 + H_1 + \cdots H_{N-1}$ ，虚时间演化作用的算符是
\begin{equation}\label{eq:多项的Hamiltonian演化算符}
U = \mathrm{e}^{-\tau (H_0 + H_1 + \cdots H_{N-1})}.
\end{equation}
我们希望可以将其化为多个局部的算符作用的乘积，类似：
\begin{equation}
\def\expH#1{\mathrm{e}^{-\tau H_{#1}}}
U = \expH{0} \expH{1} \cdots \expH{N-1},
\end{equation}
然而由于各个 $H_n$ 之间彼此不对易，矩阵指数无法直接拆开。
为了解决这个问题，我们需要使用矩阵指数的Trotter展开。

Trotter展开将矩阵和的指数变为矩阵指数的乘积。
对于矩阵 $M = M_0 + M_1$ ，考虑指数展开：
\begin{equation}
\left\{
\begin{aligned}
\mathrm{e}^{x M} &= I + x M + O (x^2), \\
\mathrm{e}^{x M_0} \mathrm{e}^{x M_1} & = (I + x M_0 + O(x^2)) (I + x M_1 + O(x^2)) ,
\end{aligned}
\right.
\end{equation}
展开得到：
\begin{equation}
\left\{
\begin{aligned}
\mathrm{e}^{x M} &= I + x (M_0 + M_1) + O (x^2), \\
\mathrm{e}^{x M_0} \mathrm{e}^{x M_1} & = I + x (M_0 + M_1) + O(x^2) ,
\end{aligned}
\right.
\end{equation}
所以我们有：
\begin{equation}
\mathrm{e}^{x (M_0 + M_1)} = \mathrm{e}^{x M_0} \mathrm{e}^{x M_1} + O(x^2),
\end{equation}
这便是一阶的Trotter展开。

而为了让误差更小，我们可以利用二阶的Trotter展开。考虑指数展开：
\begin{equation}
\left\{
\begin{aligned}
\mathrm{e}^{x M}
= &I + x M + \frac{1}{2} x^2 M^2 + O (x^3), \\
\mathrm{e}^{\frac{x}{2} M_0} \mathrm{e}^{x M_1} \mathrm{e}^{\frac{x}{2} M_0}
 =
&(I + \frac{1}{2} x M_0 + \frac{1}{8} x^2 M_0^2 + O(x^3)) \\
&(I + x M_1 + \frac{1}{2} x^2 M_1^2 + O(x^3))\\
&(I + \frac{1}{2} x M_0 + \frac{1}{8} x^2 M_0^2 + O(x^3))
,
\end{aligned}
\right.
\end{equation}
展开得到：
\begin{equation}
\left\{
\begin{aligned}
\mathrm{e}^{x M}                                                             = &I + x (M_0 + M_1) + \\
                                                                               &\frac{1}{2} x^2 (M_0^2 + M_1^2 + M_0 M_1 + M_1 M_0) + O (x^3), \\
\mathrm{e}^{\frac{x}{2} M_0} \mathrm{e}^{x M_1} \mathrm{e}^{\frac{x}{2} M_0} = &I + x (M_0 + M_1) + \\
                                                                               &\frac{1}{2} x^2 (M_0^2 + M_1^2 + M_0 M_1 + M_1 M_0) + O (x^3),
\end{aligned}
\right.
\end{equation}
所以我们有：
\begin{equation}
\mathrm{e}^{x (M_0 + M_1)} = \mathrm{e}^{\frac{x}{2} M_0} \mathrm{e}^{x M_1} \mathrm{e}^{\frac{x}{2} M_0}+ O(x^3),
\end{equation}
这便是二阶的Trotter展开。

对于多个矩阵相乘的情况， $M=M_0 + M_1 + \cdots M_{N-1}$ ，连续使用二阶的Trotter展开可得：
\begin{equation}\label{eq:多项求和的Trotter展开}
\begin{aligned}
\mathrm{e}^{x (M_0 + M_1 + \cdots M_{N-1})}
=&\mathrm{e}^{\frac{x}{2} M_0} \mathrm{e}^{x (M_1 + M_2 + \cdots M_{N-1})} \mathrm{e}^{\frac{x}{2} M_0}+ O(x^3) \\
=&\mathrm{e}^{\frac{x}{2} M_0}(
\mathrm{e}^{\frac{x}{2} M_1}
\mathrm{e}^{x (M_2 + M_3 + \cdots M_{N-1})}
\mathrm{e}^{\frac{x}{2} M_1} + O(x^3))
\mathrm{e}^{\frac{x}{2} M_0}
+O(x^3) \\
=&\cdots \\
=&\mathrm{e}^{\frac{x}{2} M_0}
\mathrm{e}^{\frac{x}{2} M_1}
\cdots
\mathrm{e}^{\frac{x}{2} M_{N-2}}
\mathrm{e}^{\frac{x}{2} M_{N-1}} \\
&
\mathrm{e}^{\frac{x}{2} M_{N-1}}
\mathrm{e}^{\frac{x}{2} M_{N-2}}
\cdots
\mathrm{e}^{\frac{x}{2} M_1}
\mathrm{e}^{\frac{x}{2} M_0}
+O(N x^3), \\
\end{aligned}
\end{equation}
将公式 [[eqref:eq:多项的Hamiltonian演化算符]] 代入公式 [[eqref:eq:多项求和的Trotter展开]] ，我们可以得到：
\begin{equation}\label{eq:逐块虚时间演化算法的最终公式}
\begin{aligned}
U
=&\mathrm{e}^{-\tau (H_0 + H_1 + \cdots H_{N-1})} \\
=&\mathrm{e}^{\frac{-\tau}{2} H_0}
\mathrm{e}^{\frac{-\tau}{2} H_1}
\cdots
\mathrm{e}^{\frac{-\tau}{2} H_{N-2}}
\mathrm{e}^{\frac{-\tau}{2} H_{N-1}} \\
&
\mathrm{e}^{\frac{-\tau}{2} H_{N-1}}
\mathrm{e}^{\frac{-\tau}{2} H_{N-2}}
\cdots
\mathrm{e}^{\frac{-\tau}{2} H_1}
\mathrm{e}^{\frac{-\tau}{2} H_0}
+O(N \tau^3). \\
\end{aligned}
\end{equation}
公式 [[eqref:eq:逐块虚时间演化算法的最终公式]] 即为逐块虚时间演化算法的核心公式。

矩阵乘积态上进行逐块虚时间演化时，每次仅需要在原有的MPS上作用 $U_i=\mathrm{e}^{\frac{-\tau}{2}H_i}$ 。
如图 [[ref:fig:朴素的itebd]] (a)，对于仅有近临相互作用的系统，所有的 $U_i$ 只会作用在两个相邻的张量上，标记为第 $x$ 个张量和第 $y$ 个张量。
我们可以直接收缩 $U_i$ 以及第 $x$ 个张量 $A_x$ 和 第 $y$ 个张量 $A_y$ ，得到一个大张量 $U_i A_x A_y$ ，如图 [[ref:fig:朴素的itebd]] (b)。
随后，为了恢复MPS矩阵乘积的形式，我们需要对收缩后的四阶张量进行分解，进行SVD分解后，MPS如图 [[ref:fig:朴素的itebd]] (c) 。
最后，将多余的奇异值矩阵 $s$ 收缩到左侧的 $u$ 张量或者右侧的 $v$ 张量中，从而完全恢复MPS的形式，即图 [[ref:fig:朴素的itebd]] (d)。

#+begin_export latex
\begin{figure}
\centering
\input{tikz/trivial_itebd.tikz}
\caption{MPS上朴素的逐块虚时间演化}
\label{fig:朴素的itebd}
\note{注：(a) 作用在 $A_x$ 和 $A_y$ 上的 $U_i$ ； (b) 收缩三个张量 ；(c) 对收缩后的张量进行SVD分解；  (c) 收缩奇异值张量，恢复MPS的形式。
}
\end{figure}
#+end_export

作用上 $U_i$ 后， 分解后得到的 $A'_x$ 和 $A'_y$ 张量之间的指标的维度从原来的 $D$ 上升至 $Dd$ ，这使得演化过程不可持续。
为此，我们可以舍弃SVD得到的奇异值矩阵中较小的奇异值，仅保留最大的 $D$ 个奇异值，从而保证经过以此 $U_i$ 演化后，MPS的所有指标的维度不变。

SVD后舍弃小的奇异值，是低秩近似的实现。
对于 $m \times n$ 的矩阵 $A$ ，进行SVD分解得到 $A = U S V^T$ ，那么 $A_k = \sum_{i=1}^{k} S_i U_i V_i^T$ 是秩为 $k$ 的矩阵中，希尔伯特-施密特范数下，最接近 $A$ 的矩阵。
而希尔伯特-施密特范数是将矩阵视作向量后的 $2$ 范数，MPS中，张量的组合最后会得到希尔伯特空间中的向量，因而我们应当在这里考虑希尔伯特-施密特范数。
具体的证明如下，令 $\sigma_i (A)$ 为 $A$ 的第 $i$ 个奇异值。
易得，$|A-A_k|^2=\sum_{i=k+1}^{n} \sigma_i(A)$ ，这里不妨设 $m \le n$ 。
由于 $\sigma_1$ 本身可以作为矩阵的谱范数，对于 $B=B' + B''$ ， 我们有 $\sigma_1(B) \le \sigma_1(B') + \sigma_1(B'')$ 。
而对于任意 $i$ 和 $j$ ，有
\begin{equation}
\begin{aligned}
\sigma_i(B') + \sigma_j(B'')
&= \sigma_1(B' - B'_{i-1}) + \sigma_1(B''-B''_{j-1}) \\
&\ge \sigma_1(B - B'_{i-1} - B''_{j-1}) \\
&\ge \sigma_1(B - B_{i+j-2}) \\
&= \sigma_{i+j-1}(B) .
\end{aligned}
\end{equation}
由于任意秩为 $k$ 的矩阵 $C$ ，有 $\sigma_{k+1}(C) = 0$ ，我们有 $\sigma_i(A-C) + \sigma_{k+1}(C) = \sigma_i(A-C) \ge \sigma_{k+i}(A)$ 。
故, $|A-C|^2 = \sum_{i=1}^{n} \sigma_i(A-C)^2 \ge \sum_{i=k+1}^{n}\sigma_i(A)^2 = |A-A_k|^2$ 。
即 $A_k$ 是秩为 $k$ 的矩阵中最接近 $A$ 的矩阵。

在进行低秩近似时，矩阵两侧插入酉矩阵不影响近似的结果，所以我们在MPS中进行SVD时，如果能保证两侧的整体为酉矩阵，那么SVD的近似不仅是当前两个张量的低秩近似，而且还是整个MPS的低秩近似。
为了将一个张量变成酉的，我们可以对他进行LQ分解或者QR分解，留下的酉矩阵留在原处，将多产生的非酉矩阵向左侧或右侧收缩。
实际操作中，我们可以先将当前两个格点两侧的所有张量都通过不断QR或LQ分解，将非酉矩阵向中间收缩，使得除当前两个格点外，两侧全部为酉。
在做一步逐块虚时间演化中，将截断后的奇异值矩阵向下一次作用的哈密顿量的两个近邻格点上收缩，从而保证下次作用时，两侧依然为酉。
这种方法要求两次连续的演化作用有相同的格点，而对于只有近邻相互作用的系统，此条件正好满足。

TODO: 环境正则


*** 简单更新算法

TODO 简单更新

** 采样方法

张量网络态可以有效表示服从面积定律的态函数，但是各种张量网络的优化算法难以得到精确的基态，而受限于虚拟指标的维度，严格计算包括能量在内的观测量也有着难以忍受的复杂度。
通过采样方法即蒙特卡罗方法，可以有效减少在张量网络态上计算观测量和能量时的计算复杂度 [[cite:Sandvik2007,Liu2017]] 。
近年来，直接采样方法 [[cite:Vieijra2021]] 通过避免样本之间的关联而提高了采样的效率。
而自然梯度法 [[cite:Neuscamman2012]] 的引入则提高了优化的效率，使得变分蒙特卡罗方法不再依赖简单更新的结果作为初态，使得优化无法进行简单更新的长程关联系统称为可能。

*** 基于采样的观测量计算

对于观测量 $O$ ，我们可以将其分解为多项之和 $O = \sum_i O_i$ ，比如整体的 $z$ 方向自旋 $S_z = \sum_{i} S_z^i$ ，其中 $i$ 遍历所有的格点，而 $S_z^i$ 是 $i$ 格点处的自旋算符。
通常，量子多体系统很少涉及四体以上的相互作用，我们可以认为每个 $O_i$ 只作用在较少个格点上。
而无论是计算观测量，还是计算梯度，都可以看作计算单项 $O_i$ 或其梯度后，再计算简单的多项之和，所以不改变问题难度，本章的下文中， $O$ 仅代表观测量的一项。

使用 $O$ 对 $|\psi\rangle$ 进行测量时，观测量为 $\langle O \rangle=\frac{\langle \psi | O | \psi \rangle}{\langle \psi | \psi \rangle}$ 。
当 $|\psi\rangle$ 使用张量网络进行表示时，比如二维的投影纠缠对态，如果直接计算观测量，我们需要收缩双层的网络 $\langle \psi | O | \psi \rangle$ 。
如果使用边界MPO的近似方式，复杂度高达 $O(D^4 D_c^3 + d D^6 Dc^2)$  [[cite:Liu2017]] ，其中 $Dc$ 为边界MPO方法中的截断参数，通常 $D_c \propto D^2$。
而使用蒙特卡罗方法，可以避免双层网络的收缩。

蒙特卡罗方法中，首先对 $\langle O \rangle$ 进行变形，得到
\begin{equation}\label{eq:观测量变形}
\langle O \rangle=\frac{\sum_{s,s'}\langle \psi | s | O | s' | \psi \rangle}{\sum_{s}\langle \psi | s | \psi \rangle} , 
\end{equation}
其中 $s$ 和 $s'$ 是希尔伯特空间中对某个构型上的投影算子。
我们这里的表述与标准的变分蒙特卡罗有些不同，比如 我们写成 $\langle \psi | s | \psi \rangle$ 而不是 $\langle \psi | s\rangle \langle s|\psi \rangle$ 。
这是因为使用费米子张量作为波函数表示时，我们无法将 $\langle \psi | s \rangle$ 写成构型无关的复数，而是得到 $\langle \psi | s$ 作为一个费米子张量，它可以进一步和 $|\psi\rangle$ 收缩得到复数。

在公式 [[eqref:eq:观测量变形]] 中，有两个指标需要在整个希尔伯特空间中遍历，即 $s$ 和 $s'$ ，这是不可接受的，因为希尔伯特空间的大小高达 $d^N$ ，其中 $d$ 为单个物理指标的维度， $N$ 为物理指标的数目。
为了解决这个问题，使用蒙特卡罗方法进行采样 $s \sim S$ ，其中 $S$ 为用于采样的分布， $s$ 被采样的概率设为 $p_s$ 。
我们可以估计观测量为
\begin{equation}\label{eq:观测量采样}
\widehat{\langle O \rangle} = \frac{\sum_{s \sim S} \frac{\langle\psi|s|\psi\rangle}{p_s}\frac{\sum_{s'} \langle \psi | s | O | s' | \psi \rangle}{\langle\psi|s|\psi\rangle}}{\sum_{s \sim S} \frac{\langle \psi | s | \psi \rangle}{p_s}} .
\end{equation}

对观测量进行蒙特卡罗计算的时候，我们实际上是在进行多项分布的采样，令构型 $s$ 被采样到的次数为 $n_s$ ，则 $n_s \sim M(n, p_s)$  ，其中 $n$ 为总采样量。
记多项分布下， $X$ 的期望为 $\langle X \rangle_M$ 。
令 $q_s = \frac{n_s}{n}$ ，对于任意 $q_s-p_s$ 的函数 $F$ ，由于
$\langle q_s - p_s \rangle_M = 0$ 和 $\langle (q_s - p_s) (q_t - p_t) \rangle_M = \frac{\delta_{st} p_s - p_s p_t}{n}$ ，
而 对于 $k > 2$ ， $\langle (q_s-p_s)^k \rangle_M = O(1/n^2)$ ，
我们有
\begin{equation}\label{eq:多项分布期望}
\langle F(q_s-p_s) \rangle_M = F(0) + \frac{1}{2n} \sum_{st} (\delta_{st} p_s - p_s p_t) \frac{\partial^2 F}{\partial \delta_s \delta_t}(0) + O(1/n^2) ,
\end{equation}

令 $r_s = \frac{\langle \psi|s|\psi\rangle}{p_s}$， $O_s = \frac{\sum_{s'}\langle\psi|s|O|s'|\psi\rangle}{\langle\psi|s|\psi\rangle}$ ，
定义 $\langle X \rangle_p=\sum_{s}X_s p_s$ ，$\langle X \rangle_\psi = \frac{\langle X_s r_s \rangle_p}{\langle r_s \rangle_p}$ ，
记   $r'_s=\frac{r_s}{\langle r\rangle_p}$ 。
我们有观测量的严格表达式
\begin{equation}\label{eq:严格观测量}
\langle O \rangle = \frac{\sum_s p_s r_s O_s}{\sum_s p_s r_s} = \frac{\langle r O \rangle_p}{\langle r\rangle_p} = \langle O \rangle_\psi,
\end{equation}
而通过采样得到的观测量估计为
\begin{equation}\label{eq:采样观测量}
\widehat {\langle O \rangle} = \frac{\sum_s q_s r_s O_s}{\sum_s q_s r_s},
\end{equation}
这和真实的观测量不同。

将公式 [[eqref:eq:严格观测量]] 和公式 [[eqref:eq:采样观测量]] 的差值与差值平方代入公式 [[eqref:eq:多项分布期望]] ，我们得到
\begin{equation}\label{eq:采样的偏差和方差}
\left\{
\begin{aligned}
\langle \widehat {\langle O \rangle} - \langle O \rangle \rangle_M &= - \frac{1}{n}\langle ( O - \langle O \rangle_\psi ) (r' - \langle r' \rangle_\psi) \rangle_\psi + O(1/n^2), \\
\langle (\widehat {\langle O \rangle} - \langle O \rangle)^2 \rangle_M &= \frac{1}{n}\left\langle (O - \langle O \rangle_\psi)^2 r' \right\rangle_\psi + O(1/n^2).
\end{aligned}
\right.
\end{equation}
可见 $\langle r' \rangle_\psi = r'_s$ ，即 $p_s \propto \langle \psi | s | \psi \rangle$ 时，通过蒙特卡罗计算的观测量的偏差是  $O(1/n^2)$ 的，当涉及到调整权重的重要采样时，对观测量的估计一般有一个 $1/n$ 级的偏差。

*** 基于采样方法的变分法

蒙特卡罗方法用于计算梯度即变分蒙特卡罗方法，考虑使用参数 $T_i$ 表示的态 $|\psi\rangle$ ，对公式 [[eqref:eq:观测量变形]] 进行求导，令 $O=H$ ，得到
\begin{equation}
\left\{
\begin{aligned}
\frac{\partial E}{\partial T_i^*}&=\frac{\sum_{s,s'}\langle \partial_{T_i^*}\psi | s | H | s' | \psi \rangle}{\sum_{s}\langle \psi | s | \psi \rangle} - E \frac{\sum_s\langle \partial_{T_i^*}\psi|s|\psi\rangle}{\langle\psi|\psi\rangle} , \\
\frac{\partial E}{\partial T_i}&=\frac{\sum_{s,s'}\langle \psi | s' | H | s | \partial_{T_i}\psi \rangle}{\sum_{s}\langle \psi | s | \psi \rangle} - E \frac{\sum_s\langle\psi|s|\partial_{T_i}\psi\rangle}{\langle\psi|\psi\rangle} .
\end{aligned}
\right.
\end{equation}
类似公式 [[eqref:eq:观测量采样]] ，我们可以将梯度写成采样估计的形式
\begin{equation}
\left\{
\begin{aligned}
\widehat{\frac{\partial E}{\partial T_i^*}}&=\frac{\sum_{s \sim S} r_s \frac{\sum_{s'} \langle \partial_{T_i^*}\psi | s | H | s' | \psi \rangle}{\langle\psi|s|\psi\rangle}}{\sum_{s \sim S} r_s} - \hat E \frac{\sum_{s \sim S} r_s \frac{\langle \partial_{T_i^*}\psi | s | \psi \rangle}{\langle\psi|s|\psi\rangle}}{\sum_{s \sim S} r_s} ,\\
\widehat{\frac{\partial E}{\partial T_i}}&=\frac{\sum_{s \sim S} r_s \frac{\sum_{s'} \langle \psi | s' | H | s | \partial_{T_i}\psi \rangle}{\langle\psi|s|\psi\rangle}}{\sum_{s \sim S} r_s} - \hat E \frac{\sum_{s \sim S} r_s \frac{\langle \psi | s | \partial_{T_i}\psi \rangle}{\langle\psi|s|\psi\rangle}}{\sum_{s \sim S} r_s} .
\end{aligned}
\right.
\end{equation}
而对于任意 $\langle a|$ 和 $|b \rangle$ ，有 $\langle a | s | b \rangle = \frac{\langle a | s | \psi \rangle \langle \psi | s | b \rangle}{\langle \psi | s | \psi \rangle}$ ，令 $\Delta_s^i = \frac{\langle \partial_{T_i^*} \psi|s|\psi\rangle}{\langle \psi|s|\psi \rangle}$ ，
经过化简，我们有
\begin{equation}
\left\{
\begin{aligned}
\widehat{\frac{\partial E}{\partial T_i^*}}&=\frac{\sum_{s \sim S} r_s \Delta_s^i E_s }{\sum_{s \sim S} r_s}- \hat E \frac{\sum_{s \sim S} r_s \Delta_s^i }{\sum_{s \sim S} r_s} \\
\widehat{\frac{\partial E}{\partial T_i}}&=\frac{\sum_{s \sim S} r_s \Delta_s^{i*} E_s^* }{\sum_{s \sim S} r_s}- \hat E \frac{\sum_{s \sim S} r_s \Delta_s^{i*} }{\sum_{s \sim S} r_s} .
\end{aligned}
\right.
\end{equation}

令 $G={\frac{\partial E}{\partial T_i^*}$ ，为了分析梯度的偏差和方差，我们写成多项分布采得的 $q_s$ 的形式，得到
\begin{equation}\label{eq:梯度的严格和估计}
\left\{
\begin{aligned}
G&=\frac{\sum_{s} p_s r_s \Delta_s E_s }{\sum_{s} p_s r_s}- \frac{\sum_s p_s r_s E_s}{\sum_s p_s r_s} \frac{\sum_{s} p_s r_s \Delta_s}{\sum_{s} p_s r_s} , \\
\hat G&=\frac{\sum_{s} q_s r_s \Delta_s E_s }{\sum_{s} q_s r_s}- \frac{\sum_s q_s r_s E_s}{\sum_s q_s r_s} \frac{\sum_{s} q_s r_s \Delta_s}{\sum_{s} q_s r_s} .
\end{aligned}
\right.
\end{equation}
将公式 [[eqref:eq:梯度的严格和估计]] 代入公式 [[eqref:eq:多项分布期望]] ，我们得到
\begin{equation}\label{eq:梯度的偏差和方差}
\left\{
\begin{aligned}
\langle \frac{n}{n-1}\hat G - G\rangle_M &= \frac{1}{n-1}\left(\langle G\rangle_\psi + \langle r'\rangle_\psi \langle G \rangle_\psi - 2 \langle r' G \rangle_\psi\right) + O(1/n^2), \\
\langle (\frac{n}{n-1}\hat G - G)^2 \rangle_M &= \frac{1}{n}\left\langle (G - \langle G \rangle_\psi)^2 r' \right\rangle_\psi + O(1/n^2) .
\end{aligned}
\right.
\end{equation}
与观测量的情况类似，如果 $\langle r' \rangle_\psi = r'_s$ 即 $p_s \propto \langle \psi | s | \psi \rangle$ 时，梯度估计的偏差为 $O(1/n^2)$ ，而涉及到调整权重的重要采样时，则有 $1/n$ 级的偏差。

*** 基于采样的自然梯度法

度量空间中，梯度下降算法可以被自然梯度法所取代。
考虑局部最小化函数 $E(x_i,x_i^*)$ 的任务，我们需要寻找 $\min_{\delta x_i^* g^{ij} \delta x_j = r^2} \hat E(x_i + \delta x_i, x_i^* + \delta x_i^*)$ 。
其中 $\hat E$ 通过当前点 $(x_i,x_i^*)$ 处的梯度估计得到，即
\begin{equation}
\hat E(x_i+\delta x_i, x_i^* + \delta x_i^*)=E(x_i,x_i^*) + \frac{\partial E}{\partial x_i} \delta x_i + \frac{\partial E}{\partial x_i^*}\delta x_i^* .
\end{equation}
使用拉格朗日乘子，定义
\begin{equation}
L(\delta x_i, \delta x_i^*, \lambda) = E(x_i) + \frac{\partial E}{\partial x_i} \delta x_i + \frac{\partial E}{\partial x_i^*} \delta x_i^* + \lambda (\delta x_i^* g^{ij} \delta x_j - r^2) ,
\end{equation}
并求导得到
\begin{equation}
\left\{
\begin{aligned}
0&=\frac{\partial L}{\partial \delta x_i} = \frac{\partial E}{\partial x_i} + \lambda \delta x_j^* g^{ji}, \\
0&=\frac{\partial L}{\partial \delta x_i^*} = \frac{\partial E}{\partial x_i^*} + \lambda g^{ij} \delta x_j .
\end{aligned}
\right.
\end{equation}
所以，
\begin{equation}
\left\{
\begin{aligned}
\delta x_i &= -\frac{1}{\lambda} g_{ij}\frac{\partial E}{\partial x_j^*} , \\
\delta x_i^* &= - \frac{1}{\lambda} g_{ij}^* \frac{\partial E}{\partial x_j} . \\
\end{aligned}
\right.
\end{equation}

使用参数空间的参数表示量子态时，由于表示本身的原因，可能导致在参数空间中难以进行梯度下降。
而希尔伯特空间中，能量函数有着较简单的形式，假设希尔伯特空间有平凡度规 ， 即 $g^H_{ij}=\delta_{ij}$ ，则可以在表示态的参数空间中诱导出参数空间的度规，从而提高优化效率。

对于两个度量空间 $A$ 和 $B$ ， $x^{A*}_i g^{Aij} y^A_j = x^{B*}_i g^{Bij} y^B_j$ 所以
\begin{equation}\label{eq:度规诱导}
g^{Aij} = \frac{\partial x^{B*}_k}{\partial x^{A*}_i} g^{Bkl} \frac{\partial y^B_l}{\partial y^A_j} .
\end{equation}
希尔伯特空间是射影空间，我们首先将希尔伯特空间的度规诱导至对应的复向量空间中。
由于
\begin{equation}
\psi_i^H = \frac{\psi_i^C}{\sqrt{\sum_k \psi_k^{C*} \psi_k^C}} ,
\end{equation}
我们有
\begin{equation}\label{eq:C和H}
\frac{\partial \psi^H_i}{\partial \psi^C_j} = \frac{1}{|\psi^C|} (\delta_{ij} - \frac{1}{2}\frac{\psi^C_i \psi^{C*}_j}{|\psi^C|^2}) .
\end{equation}
将公式 [[eqref:eq:C和H]] 代入公式 [[eqref:eq:度规诱导]] ，我们得到
\begin{equation}
\begin{aligned}
g^{Cij}
&= \frac{1}{|\psi^C|}(\delta_{ki} - \frac{\psi^{C*}_k \psi^C_i}{|\psi^C|^2}) \delta_{kl} \frac{1}{|\psi^C|}(\delta_{lj} - \frac{\psi^C_l \psi^{C*}_j}{|\psi^C|^2}) \\
&= \frac{1}{|\psi^C|^2}(\delta_{ki} - \frac{\psi^{C*}_k \psi^C_i}{|\psi^C|^2}) (\delta_{kj} - \frac{\psi^C_k \psi^{C*}_j}{|\psi^C|^2}) \\
&= \frac{1}{|\psi^C|^2}(\delta_{ij} - \frac{\psi^C_i \psi^{C*}_j}{|\psi^C|^2}) .
\end{aligned}
\end{equation}

而对于参数 $T_i$ 所在的参数空间 $T$ ，其度规为
\begin{equation}\label{eq:度规推导}
\begin{aligned}
g^{Tij}
&= \frac{\partial \psi_k^*}{\partial T_i^*} \frac{1}{|\psi|^2}(\delta_{kl} - \frac{\psi_k \psi_l^*}{|\psi|^2}) \frac{\partial \psi_l}{\partial T_j} \\
&= \frac{1}{|\psi|^2}\frac{\partial \psi_k^*}{\partial T_i^*} (\delta_{kl} - \frac{\psi_k \psi_l^*}{|\psi|^2}) \frac{\partial \psi_l}{\partial T_j} \\
&= \frac{1}{|\psi|^2} \left(\frac{\partial \psi_k^*}{\partial T_i^*} \frac{\partial \psi_k}{\partial T_j} - \frac{\partial \psi_k^*}{\partial T_i^*} \frac{\psi_k \psi_l^*}{|\psi|^2} \frac{\partial \psi_l}{\partial T_j}\right) .
\end{aligned}
\end{equation}
将公式 [[eqref:eq:度规推导]] 写成方便采样估计的形式，得到
\begin{equation}
g^{Tij} = \frac{\sum_k\langle \partial_{T_i^*}\psi|k|\partial_{T_j}\psi\rangle}{\langle \psi | \psi \rangle} - \frac{\sum_k\langle \partial_{T_i^*}\psi|k|\psi\rangle}{\langle\psi|\psi\rangle} \frac{\sum_l\langle\psi|l|\partial_{T_j}\psi\rangle}{\langle\psi|\psi\rangle} .
\end{equation}
可以采样估计
\begin{equation}
\widehat{g^{Tij}} = \frac{\sum_{s \sim S} r_s \Delta_s^i \Delta_s^{j*}}{\sum_{s \sim S} r_s} - \frac{\sum_{s \sim S} r_s \Delta_s^i}{\sum_{s \sim S} r_s} \frac{\sum_{s \sim S} r_s \Delta_s^{j*}}{\sum_{s \sim S} r_s} .
\end{equation}

*** 直接采样

TODO

* 张量网络态程序基础算子在神威超级计算机上的优化 <<sec:神威优化>>

TODO

* 张量网络态计算套件（TNSP） <<sec:软件>>

** 张量网络态计算套件概述

基于第 [[ref:sec:张量和张量网络]] 章介绍的各类型张量与第 [[ref:sec:张量网络态算法]] 章介绍的多种张量网络态算法，我们开发了张量网络态计算套件（TNSP）[[cite:TNSP-repo]]。
TNSP简化了各种张量网络态（TNS）方法，特别是PEPS方法的编程过程，它抽象了不同类型张量的细节，无论是费米子张量、对称张量还是常规的张量。
它提供了简单的用户和编程界面，方便使用各种流行的TNS方法，包括简单更新、梯度优化和各种采样技术。
该框架的设计本身十分具有灵活性，允许用户通过Python3插件无缝集成自定义的物理模型和优化策略。

#+begin_export latex
\begin{figure}
\centering
\includegraphics[width=0.8\textwidth]{figures/structure-of-tnsp.pdf}
\caption{张量网络态计算套件的结构}
\label{fig:张量网络态计算套件的结构}
\note{注：
张量网络计算套件的结构。该套件的核心是张量库TAT，它使用C++17设计，以提供各种张量类型的统一接口。
通过pybind11为该张量库创建了Python接口。
在Python接口的基础上，开发了一个名为tetragono的包，提供了一个易于访问和统一的接口，用于适用于不同物理模型和张量类型的多种TNS方法。
tetragono可以通过插件进行自定义修改。
套件还包括一个名为tetraku的模型库，其中包含了一系列预定义的插件，这些插件涵盖了各种物理模型、采样策略等。
此外，tetragono还使用了几个辅助库：lazy\_graph，提供了一种在计算中使用的惰性求值机制；以及PyScalapack，提供了ScaLAPACK的Python接口。
}
\end{figure}
#+end_export

该套件的总体结构如图 [[ref:fig:张量网络态计算套件的结构]] 所示。
套件内的核心张量库TAT旨在为各种类型张量提供统一的接口。
TAT实现为一个C++17的头文件库，通过泛型编程统一实现不同张量类型。
TAT通过使用所谓的对称性类型（Symmetry）来区分张量类型，对称性类型主要包含量子数，并提供关于这些量子数是费米子还是玻色子的相关信息。
根据指定的对称性类型，TAT定义了一个边类型（Edge）来表示张量指标的性质，该边类型涵盖了由对称性类型表征的一系列值及其各自的简并度。
随后，张量类型（Tensor）由一系列边名称和一系列边构建，并提供各种张量操作的接口，如奇异值分解（SVD）、收缩或边分割/合并，这些操作在不同张量类型中保持接口的一致性。
一旦构建了具有特定对称群的张量，其各种操作的函数接口都保持一致。

如图 [[ref:fig:张量网络态计算套件的结构]] 所示，我们使用pybind11将TAT的C++接口进行了封装，开发了一个Python3接口。
用户可以直接通过C++代码访问TAT库，也可以通过Python接口进行访问。

在核心张量库之上，我们开发了tetragono，以提供针对不同物理模型和张量类型的各种TNS方法，特别是PEPS的简便且统一的接口。
tetragono引入了抽象态类型（AbstractState）的概念以记录物理模型中的各种信息，以及一个抽象晶格类型（AbstractLattice），涵盖了PEPS虚拟边的详细信息。
在这两个抽象类之上，tetragono实现了各种TNS方法，包括简单更新和各种基于采样的方法。
在基于采样的方法中，tetragono实现了物理观测量的计算和优化方法，例如梯度下降 [[cite:Liu2017]] 和随机重构算法 [[cite:Sorella1998,Neuscamman2012,Stokes2020]]。
同时提供了一个简单的直接对角化方法，可用于对小系统中TNS的结果进行基准测试。
为提高重用性，各种组件如用于单层或双层网络的边界MPO方法 [[cite:Murg2007]] 的辅助张量系统也被独立封装。
目前，tetragono仅支持方形晶格上的PEPS。
但我们注意到，三角晶格上的模型可以直接利用为方形晶格设计的PEPS [[cite:Zhang2022]] 。
此外，通过引入在某一位置处的多个物理指标，我们可以把其他晶格几何结构（如Kagome和六边晶格）映射到方形晶格上 [[cite:Dong2023]] 。

tetragono提供了一个接口，使用户能够开发自己的插件，从而在框架内自定义物理模型和算法。
例如，在基于采样的算法 [[cite:Sandvik2007,Liu2017,Dong2019]] , 中，用户可以修改采样规则，以针对特定物理模型提高效率。

我们在套件内为一些常见的物理模型实现了一系列插件，并将它们整合到一个名为tetraku的库中。tetraku被设计为与tetragono无缝集成的插件，使用户无需额外编程即可直接利用这些物理模型。

** 套件各组件的设计

*** 张量库（TAT）

作为框架的中最基础的部分，张量包TAT旨在为各种类型的张量提供统一的接口。
TAT采用对称性类型（Symmetry）来区分对称性张量、费米子张量或标准张量，每种类型都与特定的对称群相对应的不同量子数相关联。
在没有对称性的情况下，量子数被留空。
在 $U(1)$ 对称性的情况下，量子数使用一个整数表示，而在 $Z(2)$ 对称性的情况下，量子数是一个布尔值，因为布尔XOR群与 $Z(2)$ 群同构。
在更复杂的乘积对称群情况中，存在多种量子数，使得对称类型可以被视为任意长度的量子数元组。
这些量子数的类型以及指示每个量子数是否为费米子的标记，通过泛型编程静态定义，从而增强了代码的可重用性和可读性。

在对称类型基础上，边类型（Edge）被设计为一序列量子数和对应简并数的对所构成的段，如果此对称性类型包含费米子量子数，则额外使用一个布尔值作为费米箭头。
这里我们使用对的序列而不是序列的对，以提高可读性。
随后，可以使用从公式  [[eqref:eq:Abel对称张量的形式]] 利用边的序列，即指标的序列创建分块块多维数组。
包含分块多维数组和边序列的结构在TNSP中被称为核心类型（Core），这些分块的数据存储为一维数组以提高性能。
然后，张量类型通过组合指向核心类型的共享指针和指标名称序列来得到。
我们使用指针来实现轻量级的指标重命名，允许在不复制张量数据的情况下，操作张量的指标名称。

TAT的代码位于仓库的 =/TAT/include/TAT= 目录中，包含 =TAT.hpp= 主文件和四个目录： =structure= 、 =implement= 、 =utility= 和 =miscellaneous= 。在 =structure= 目录中，文件的组织如下：
+ =name.hpp= 描述了用作指标名称的类型。
+ =symmetry.hpp= 定义了对称性类型，用于表示量子数。
+ =edge.hpp= 定义了基于对称性类型的边类型。
+ =core.hpp= 定义了核心类型，用于包含边缘序列和块多维数组。
+ =tensor.hpp= 通过结合指向核心类型的指针和名称序列来描述张量类型，并声明了张量操作的函数，这些函数的实现可以在implement目录中的相应文件中找到。

TODO

*** 张量网络态库（tetragono）

TODO

*** 常见模型合集（tetraku）

TODO

** 套件的使用展示

TODO

* 六角晶格中的Hubbard模型的掺杂基态模拟计算 <<sec:超导>>

** 背景介绍与主要结论

对高温超导现象 [[cite:Bednorz1986,Wu1987]] 的理解是当代凝聚态物理学中最具挑战性的课题之一。
普遍认为，通过研究掺杂的Mott绝缘体 [[cite:Lee2006]] 可以理解高温超导，而Hubbard模型 [[cite:Hubbard1964]] 是描述这类绝缘体的基本工具。
然而，多年来的研究表明，在方形晶格上原始的Hubbard模型并不能产生稳定的超导态 [[cite:Rozhkov2011,Kitatani2019,Qin2020]] 。
这引起了人们对使用Hubbard模型来研究六角晶格上电子电子关联的兴趣 [[cite:Pathak2010,BlackSchaffer2014,Wang2012,Xu2016,Jiang2014,Gu2020,Kiesel2012,Raghu2010,Honerkamp2008,Ying2020,Wolf2018,Nandkishore2012,Watanabe2013,Ma2014,Wu2013]] 。
与方形晶格相比，六角晶格因其六边形结构展现出独特的电子特性。
六角晶格的能带结构在费米能级处具有Dirac锥，同时在 $1/8$ 电子和空穴掺杂的情况下，表现出对数型 Van Hove 奇异性以及显著的费米面嵌套，
这些特性可能增强六角晶格上的长程超导相 [[cite:Pathak2010,Nandkishore2012]]。

尽管在半填充时观察到在约 $U_c = 3.8$ 处有从半金属到反铁磁态的相变 [[cite:Otsuka2016]] ，但关于掺杂对六角晶格上Hubbard模型中的反铁磁态的影响仍然没有彻底研究。
许多研究都探讨了六角晶格上的超导性，但结果存在争议。
一个关于六角晶格上Hubbard模型的变分量子Monte Carlo（QMC）研究提出，在掺杂石墨烯中存在具有手性d + id对称性的超导 [[cite:Pathak2010]] 。
另外，另一项QMC模拟也预测了在强相互作用区间会出现金手性 $d + id$ 波超导性 [[cite:BlackSchaffer2014]] 。
同样，Grassmann张量乘积态（GTPS）研究也表明在大U极限下，t-J模型中存在手性超导态 [[cite:Gu2013]] 。
然而，最新的密度矩阵重整化群（DMRG）模拟结果与这些研究相矛盾，指出在掺杂六角晶格的Hubbard模型中，Cooper对关联中缺乏准长程序 [[cite:Qin2022]] 。

然而，这些数值方法各自有其局限性。
VMC方法依赖于基于先验知识设定的初态，这可能导致结果有偏。
DMRG方法对于一维或准一维系统有效，但可能无法充分捕捉二维系统的特性。
此外，参考文献 [[cite:Gu2013]] 中使用的GTPS使用了简单更新算法，在时间演化过程中涉及近似处理，可能影响结果的准确性。

为了深入探究六角晶格中Hubbard模型掺杂后的性质，我们在一个较宽的参数范围内通过第 [[ref:sec:张量和张量网络]] 章中介绍的费米子投影纠缠对状态（f-PEPS）研究了掺空穴的六角晶格Hubbard模型。
我们使用第 [[ref:sec:张量网络态算法]] 章介绍的各种优化方法对 f-PEPS 进行优化，确保了可控的精度。
这些方法一方面避免了简单更新优化过程中忽略环境影响而导致的误差，另一方面显著降低了与张量网络截断 $D$ 相关的复杂度问题，使得能够利用更大的网络截断，从而在大系统中实现高度精确且收敛的结果。
我们观察到准长程超导秩序的存在，其特征是Cooper对关联随距离呈幂律衰减，衰减指数 $K > 1$ 。
我们还研究了系统中的竞争相，包括电荷密度波（CDW）序和反铁磁（AFM）序。
结果发现，在低掺杂浓度下，基态呈现AFM序，然而随着掺杂水平的增加，这一秩序逐渐减弱，并最终在 $\delta>0.05$ 时消失。
相比之下，即使在较高的掺杂水平下，基态仍持续表现出稳定的CDW序。

** 计算结果与分析

TODO：参数

*** 超导序

TODO

*** 反铁磁序与电荷密度波序

TODO

** 小结

TODO

* 方形晶格中的Hubbard模型的有限温模拟计算 <<sec:有限温>>

TODO


#+begin_export latex
\bibliography{main}
\appendix
#+end_export

#+begin_export latex
\backmatter
#+end_export

#+begin_export latex
\begin{acknowledgements}
在研究学习期间，我有幸得到了三位老师的教导，
他们是：我的导师，中国科大XXX研究员，中科院X昆明动物所马老师以及美国犹他大学的XXX老师。
三位深厚的学术功底，严谨的工作态度和敏锐的科学洞察力使我受益良多。
衷心感谢他们多年来给予我的悉心教导和热情帮助。

感谢XXX老师在实验方面的指导以及教授的帮助。
科大的XXX同学和XXX同学参与了部分试验工作，在此深表谢意。

TODO
\end{acknowledgements}

\begin{publications}

\section*{已发表论文}

\begin{enumerate}
\item A A A A A A A A A
\item A A A A A A A A A
\item A A A A A A A A A
\end{enumerate}

\section*{待发表论文}

\begin{enumerate}
\item A A A A A A A A A
\item A A A A A A A A A
\item A A A A A A A A A
\end{enumerate}

\section*{研究报告}
\begin{enumerate}
\item A A A A A A A A A
\item A A A A A A A A A
\item A A A A A A A A A
\end{enumerate}

TODO
\end{publications}
#+end_export
